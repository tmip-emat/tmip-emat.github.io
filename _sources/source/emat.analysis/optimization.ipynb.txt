{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:25.706784Z",
     "start_time": "2021-05-25T17:29:24.206254Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "emat 0.5.2, plotly 4.14.3\n"
     ]
    }
   ],
   "source": [
    "import emat, numpy, pandas\n",
    "emat.versions()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Optimization Tools"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Typically, transportation policy planning models will be used to\n",
    "try to find policies that provide the \"best\" outcomes.  In a traditional\n",
    "analytical environment, that typically means using models to find \n",
    "optimal outcomes for performance measures.\n",
    "\n",
    "Transportation models as used in the TMIP-EMAT framework are \n",
    "generally characterized by two important features: they are \n",
    "subject to significant exogenous uncertainties about the future\n",
    "state of the world, and they include numerous performance measures\n",
    "for which decision makers would like to see good outcomes. Therefore,\n",
    "optimization tools applied to these models should be \n",
    "flexible to consider *multiple objectives*,\n",
    "as well as be *robust* against uncertainty."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _methodology-multiobjective-optimization:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multi-Objective Optimization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "With exploratory modeling, optimization is also often undertaken as a \n",
    "[multi-objective optimization](https://en.wikipedia.org/wiki/Multi-objective_optimization) exercise, where multiple\n",
    "and possibly conflicting performance measures need to be addressed simultaneously. \n",
    "A road capacity expansion project is a good example of a multi-objective optimization \n",
    "problem. In such a situation, we want to expand the capacity of a roadway, both minimizing\n",
    "the costs and maximizing the travel time benefits.  A smaller expansion project will cost less\n",
    "but also provide lesser benefits.  Funding it with variable rate debt might \n",
    "decrease expected future costs but doing so entails more risk than fixed-rate debt."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One approach to managing a multi-objective optimization problem is to distill it \n",
    "into a single objective problem, by assigning relative weights to the various \n",
    "objectives.  For a variety of reasons, this can be difficult to accomplish in public policy environments that are common in transportation planning. \n",
    "Multiple stakeholders may have different\n",
    "priorities and may not be able to agree on a relative weighting structure.  \n",
    "Certain small improvements in a performance measure may be valued very differently \n",
    "if they tip the measure over a regulated threshold (e.g. to attain a particular \n",
    "mandated level of emissions or air quality).\n",
    "\n",
    "Instead of trying to simplify a multi-objective into a simple-objective one,\n",
    "an alternate approach is to preserve the multi-objective nature of the problem\n",
    "and find a set or spectrum of different solutions, each of which solves the problem\n",
    "at a different weighting of the various objectives.  Decision makers can then\n",
    "review the various different solutions, and make judgements about the various\n",
    "trade-offs implicit in choosing one path over another.\n",
    "\n",
    "Within a set of solutions for this kind of problem, each individual solution is \n",
    "\"[Pareto optimal](https://en.wikipedia.org/wiki/Pareto_efficiency)\", such that\n",
    "no individual objective can be improved without degrading at least one other\n",
    "objective by some amount.  Thus, each of these solutions might be the \"best\"\n",
    "policy to adopt, and exactly which is the best is left as a subjective judgement\n",
    "to decision makers, instead of being a concretely objective evaluation based \n",
    "on mathematics alone."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _methodology-robust-optimization:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Robust Optimization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Robust optimization is a variant of the more traditional optimization\n",
    "problem, where we will try to find policies that yield *good* outcomes\n",
    "across a range of possible futures, instead of trying to find a policy\n",
    "that delivers the *best* outcome for a particular future.\n",
    "\n",
    "To conceptualize this, let us consider a decision where there are four\n",
    "possible policies to choose among, a single exogenous uncertainty that\n",
    "will impact the future, and a single performance measure that we would\n",
    "like to minimize.  We have a model that can forecast the performance \n",
    "measure, conditional on the chosen policy and the future value of the\n",
    "exogenous uncertainty, and which gives us a forecasts as shown below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.102716Z",
     "start_time": "2021-05-25T17:29:25.709382Z"
    },
    "nbsphinx": "hidden"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy\n",
    "from matplotlib import pyplot as plt\n",
    "x = numpy.linspace(0,1)\n",
    "y1 = x**3 + numpy.cos((x-3)*23)*.01\n",
    "y2 = x**3 + .1 + numpy.sin((x-3)*23)*.01\n",
    "y3 = 1.3*(1-x)**17 + numpy.cos((x-3)*23)*.01 + .1\n",
    "y4 = numpy.sin((x-3)*23)*.01+0.16 + .1*(x-0.5)\n",
    "\n",
    "linestyles = [\n",
    "    dict(ls='-', c='blue'),\n",
    "    dict(ls=':', c='orange'),\n",
    "    dict(ls='-.', c='green'),\n",
    "    dict(ls='--', c='red'),\n",
    "]\n",
    "\n",
    "fig, ax = plt.subplots(1,1)\n",
    "ax.plot(x, y1, **linestyles[0], label=\"Policy 1\")\n",
    "ax.plot(x, y2, **linestyles[1], label=\"Policy 2\")\n",
    "ax.plot(x, y3, **linestyles[2], label=\"Policy 3\")\n",
    "ax.plot(x, y4, **linestyles[3], label=\"Policy 4\")\n",
    "ax.set_ylabel(\"Performance Measure\\n← Lower is Better ←\")\n",
    "ax.set_xlabel(\"Exogenous Uncertainty\")\n",
    "ax.legend()\n",
    "ax.set_title(\"Example Simple Forecasting Experiment\")\n",
    "\n",
    "plt.savefig(\"robust_example.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. image:: robust_example.png"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In a naive optimization approach, if we want to minimize the performance\n",
    "measure, we can do so by selecting Policy 1 and setting the exogenous\n",
    "uncertainty to 0.1.  Of course, in application we are able to select\n",
    "Policy 1, but we are unable to actually control the exogenous uncertainty\n",
    "(hence, \"exogenous\") and we may very well end up with a very bad result\n",
    "on the right side of the figure.\n",
    "\n",
    "We can see from the figure that, depending on the ultimate value for \n",
    "the exogenous uncertainty, either Policy 1 or Policy 3 might yield the\n",
    "best possible value of the performance measure.  However, both of these\n",
    "policies come with substantial risks as well -- in each Policy there are\n",
    "some futures where the results are optimal, but there are also some \n",
    "futures where the results are exceptionally poor.\n",
    "\n",
    "In contrast with these optimal policies, Policy 4 may be considered a \n",
    "\"robust\" solution.  Although there is no value of the exogenous \n",
    "uncertainty where Policy 4 yields the best possible outcome, there is\n",
    "also no future where Policy 4 yields a very poor outcome.  Instead, across\n",
    "all futures it is always generating a \"pretty good\" outcome.\n",
    "\n",
    "Different expectations for the future may lead to different policy \n",
    "choices.  If the decision maker feels that low values of the exogenous\n",
    "uncertainty are much more likely than high values, Policy 1 might be\n",
    "the best policy to choose.  If high values of the exogenous uncertainty\n",
    "are expected, then Policy 3 might be the best choice.  If there is not\n",
    "much agreement on the probable future values of the exogenous uncertainty,\n",
    "or if decision makers want to adopt a risk-averse stance, then Policy 4\n",
    "might be the best choice.  \n",
    "\n",
    "The remaining policy shown in the figure, Policy 2, is the lone holdout \n",
    "in this example -- there is no set of expectations about the future, or\n",
    "attitudes toward risk, that can make this policy the best choice.  This\n",
    "is because, no matter what the future value of the exogenous uncertainty\n",
    "may be, the performance measure has a better outcome from Policy 1 than\n",
    "from Policy 2.  In this circumstance, we can say that Policy 2 is \n",
    "\"dominated\" and should never be chosen by decision makers."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Robustness Functions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To perform robust optimization in EMAT, we need a core model (or meta-model)\n",
    "with defined input and output parameters, as well a set of functions called\n",
    "\"robustness measures\" that define what a \"robust\" measure represents.  \n",
    "As noted above, different expectations about future states of the world\n",
    "can lead to different rankings of policy options.  In addition, different\n",
    "attitudes towards risk can result in different robustness measures that are\n",
    "derived from the same underlying modeled performance measures.  \n",
    "\n",
    "For example, consider the *Example Simple Forecasting Experiment* shown above.\n",
    "In this example, we could compute a robustness measure for each policy where\n",
    "we calculate the maximum value of the performance measure across any possible\n",
    "value of the exogenous uncertainty.  This value is shown in the first column\n",
    "of robustness measures in the figure below, and under this measure Policy 4 is\n",
    "far and away the best choice. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.441507Z",
     "start_time": "2021-05-25T17:29:26.105788Z"
    },
    "nbsphinx": "hidden"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(\n",
    "    1,6, sharey=True, \n",
    "    gridspec_kw=dict(width_ratios=[7,1,1,1,1,1], wspace=0.05,), \n",
    "    figsize=[8, 4.],\n",
    ")\n",
    "\n",
    "\n",
    "ax[0].plot(x, y1, **linestyles[0], label=\"Policy 1\")\n",
    "ax[0].plot(x, y2, **linestyles[1], label=\"Policy 2\")\n",
    "ax[0].plot(x, y3, **linestyles[2], label=\"Policy 3\")\n",
    "ax[0].plot(x, y4, **linestyles[3], label=\"Policy 4\")\n",
    "ax[1].plot([0,1], [y1.max()]*2, **linestyles[0], lw=2)\n",
    "ax[1].plot([0,1], [y2.max()]*2, **linestyles[1], lw=2)\n",
    "ax[1].plot([0,1],[y3.max()]*2, **linestyles[2],  lw=2)\n",
    "ax[1].plot([0,1], [y4.max()]*2, **linestyles[3], lw=2)\n",
    "\n",
    "ax[2].plot([0,1], [y1.mean()]*2, **linestyles[0], lw=2)\n",
    "ax[2].plot([0,1], [y2.mean()]*2, **linestyles[1], lw=2)\n",
    "ax[2].plot([0,1],[y3.mean()]*2, **linestyles[2],  lw=2)\n",
    "ax[2].plot([0,1], [y4.mean()]*2, **linestyles[3], lw=2)\n",
    "\n",
    "ax[3].plot([0,1], [numpy.median(y1)]*2, **linestyles[0], lw=2)\n",
    "ax[3].plot([0,1], [numpy.median(y2)]*2, **linestyles[1], lw=2)\n",
    "ax[3].plot([0,1], [numpy.median(y3)]*2, **linestyles[2],  lw=2)\n",
    "ax[3].plot([0,1], [numpy.median(y4)]*2, **linestyles[3], lw=2)\n",
    "\n",
    "ax[4].plot([0,1], [numpy.percentile(y1, 90)]*2, **linestyles[0], lw=2)\n",
    "ax[4].plot([0,1], [numpy.percentile(y2, 90)]*2, **linestyles[1], lw=2)\n",
    "ax[4].plot([0,1], [numpy.percentile(y3, 90)]*2, **linestyles[2],  lw=2)\n",
    "ax[4].plot([0,1], [numpy.percentile(y4, 90)]*2, **linestyles[3], lw=2)\n",
    "\n",
    "ax[5].plot([0,1], [y1.min()]*2, **linestyles[0], lw=2)\n",
    "ax[5].plot([0,1], [y2.min()]*2, **linestyles[1], lw=2)\n",
    "ax[5].plot([0,1], [y3.min()]*2, **linestyles[2], lw=2)\n",
    "ax[5].plot([0,1], [y4.min()]*2, **linestyles[3], lw=2)\n",
    "\n",
    "\n",
    "ax[0].set_ylabel(\"Performance Measure\\n← Lower is Better ←\")\n",
    "ax[0].set_xlabel(\"Exogenous Uncertainty\")\n",
    "ax[0].legend()\n",
    "ax[0].set_title(\"Example Simple Forecasting Experiment\")\n",
    "ax[3].set_title(\"Robustness Measures\")\n",
    "ax[1].set_xlabel(\"Max\\nPM\")\n",
    "ax[2].set_xlabel(\"Mean\\nPM\")\n",
    "ax[3].set_xlabel(\"Median\\nPM\")\n",
    "ax[4].set_xlabel(\"90%ile\\nPM\")\n",
    "ax[5].set_xlabel(\"Min\\nPM\")\n",
    "ax[-1].yaxis.set_label_position(\"right\")\n",
    "for a in [1,2,3,4,5]:\n",
    "    ax[a].set_xticks([])\n",
    "    ax[a].set_yticks([])\n",
    "plt.savefig(\"robust_measures.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. image:: robust_measures.png"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The \"maximum performance measure result\" robustness function is a very\n",
    "risk averse approach, as no consideration is given to the shape or distribution\n",
    "of performance measure values other than the maximum.  Consider these same\n",
    "policies shown if Policy 4 is not available. In this case, the next best \n",
    "policy under this robustness function is Policy 1, as it has the next lowest\n",
    "maximum value.  However, when we look at\n",
    "a comparison between Policies 1 and 3 in aggregate, we might easily conclude\n",
    "that Policy 3 is a better choice overall: it is better than Policy 1 on average,\n",
    "as judged by the mean, median, and 90th percentile measures.  The only reason \n",
    "Policy 3 appears worse than Policy 1 on the initial robustness function is that \n",
    "it has an especially poor outcome at one extreme end of the uncertainty \n",
    "distribution.  Depending on our attitude towards risk on this performance measure,\n",
    "we may want to consider using some of these alternative robustness functions.\n",
    "An additional consideration here is that the various robustness measures\n",
    "in this example case are all unweighted measures: they implicitly assume a \n",
    "uniform probability distribution for the entire range of possible values for\n",
    "the exogenous uncertainty.  If we are able to develop a probability distribution\n",
    "on our expectations for the future values of the exogenous uncertainties,\n",
    "we can use that probability distribution to weight the robustness functions\n",
    "appropriately, creating more meaningful values, particularly for the non-extreme\n",
    "value robustness functions (i.e., everything except the min and max)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Mechanics of Using Optimization"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _methodology-search-over-levers:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Policy Optimization: Search over Levers"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The simplest optimization tool available for TMIP-EMAT users is \n",
    "a *search over policy levers*, which represents multi-objective\n",
    "optimization, manipulating policy lever values to find a Pareto\n",
    "optimal set of solutions, holding the exogenous uncertainties\n",
    "fixed at a particular value for each uncertainty (typically at \n",
    "the default values).  This is often a useful first step\n",
    "in exploratory analysis, even if your ultimate goal is to \n",
    "eventually undertake a robust optimization analysis.  This less\n",
    "complex optimization can give insights into tradeoffs between\n",
    "performance measures and reasonable combinations of policy levers.\n",
    "\n",
    "To demonstrate a search over levers, we'll use the Road Test \n",
    "example model."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.494532Z",
     "start_time": "2021-05-25T17:29:26.444278Z"
    }
   },
   "outputs": [],
   "source": [
    "import emat.examples\n",
    "scope, db, model = emat.examples.road_test()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The scope defined for a model in TMIP-EMAT will already provide\n",
    "information about the preferred directionality of performance\n",
    "measures (i.e., 'maximize' when larger values are better,\n",
    "'minimize' when smaller values are better, or 'info' when we\n",
    "do not have a preference for bigger or smaller values, but we \n",
    "just want to be tracking the measure).  We can see these\n",
    "preferences for any particular performance measure by inspecting\n",
    "the scope definition file, or by using the `info` method of\n",
    "`emat.Measure` instances."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.499341Z",
     "start_time": "2021-05-25T17:29:26.495792Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "net_benefits:\n",
      "  shortname: Net Benefits\n",
      "  kind: maximize\n"
     ]
    }
   ],
   "source": [
    "scope['net_benefits'].info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To conduct an optimization search over levers, we'll use the \n",
    "`optimize` method of the TMIP-EMAT model class, setting the\n",
    "`search_over` argument to `'levers'`.  In this example, we will\n",
    "set the number of function evaluations (`nfe`) to 10,000, although\n",
    "for other models you may need more or fewer to achieve a good, \n",
    "well converged result.  In a Jupyter notebook environment, \n",
    "we can monitor convergence visually in real time in the figures\n",
    "that will appear automatically."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.800544Z",
     "start_time": "2021-05-25T17:29:26.501425Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e83a0a7fab9c4391a08caaf3adb2221c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ConvergenceMetrics(children=(FigureWidget({\n",
       "    'data': [{'fill': 'tonexty',\n",
       "              'line': {'shape': '…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "result = model.optimize(\n",
    "    nfe=10_000, \n",
    "    searchover='levers', \n",
    "    check_extremes=1,\n",
    "    cache_file='./optimization_cache/road_test_search_over_levers.gz',\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `optimize` method returns an `OptimizationResult` object, \n",
    "which contains the resulting solutions, as well as some information\n",
    "about how they were derived.  We can review the raw values of the\n",
    "solutions as a pandas DataFrame, or see the scenario values used \n",
    "to generate these solutions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.816699Z",
     "start_time": "2021-05-25T17:29:26.802415Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>expand_capacity</th>\n",
       "      <th>amortization_period</th>\n",
       "      <th>debt_type</th>\n",
       "      <th>interest_rate_lock</th>\n",
       "      <th>build_travel_time</th>\n",
       "      <th>time_savings</th>\n",
       "      <th>value_of_time_savings</th>\n",
       "      <th>net_benefits</th>\n",
       "      <th>cost_of_capacity_expansion</th>\n",
       "      <th>free_flow_time</th>\n",
       "      <th>initial_capacity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>88.855738</td>\n",
       "      <td>50</td>\n",
       "      <td>Paygo</td>\n",
       "      <td>True</td>\n",
       "      <td>60.707492</td>\n",
       "      <td>8.292508</td>\n",
       "      <td>62.193807</td>\n",
       "      <td>-164.501446</td>\n",
       "      <td>226.695253</td>\n",
       "      <td>60</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.143481</td>\n",
       "      <td>50</td>\n",
       "      <td>Paygo</td>\n",
       "      <td>True</td>\n",
       "      <td>66.580231</td>\n",
       "      <td>2.419769</td>\n",
       "      <td>18.148269</td>\n",
       "      <td>-2.627975</td>\n",
       "      <td>20.776244</td>\n",
       "      <td>60</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3.340111</td>\n",
       "      <td>50</td>\n",
       "      <td>Paygo</td>\n",
       "      <td>True</td>\n",
       "      <td>67.891632</td>\n",
       "      <td>1.108368</td>\n",
       "      <td>8.312761</td>\n",
       "      <td>-0.208774</td>\n",
       "      <td>8.521535</td>\n",
       "      <td>60</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>13.617514</td>\n",
       "      <td>50</td>\n",
       "      <td>Paygo</td>\n",
       "      <td>True</td>\n",
       "      <td>65.400841</td>\n",
       "      <td>3.599159</td>\n",
       "      <td>26.993693</td>\n",
       "      <td>-7.748303</td>\n",
       "      <td>34.741996</td>\n",
       "      <td>60</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>36.145663</td>\n",
       "      <td>50</td>\n",
       "      <td>Paygo</td>\n",
       "      <td>True</td>\n",
       "      <td>62.619553</td>\n",
       "      <td>6.380447</td>\n",
       "      <td>47.853349</td>\n",
       "      <td>-44.364108</td>\n",
       "      <td>92.217458</td>\n",
       "      <td>60</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   expand_capacity  amortization_period debt_type  interest_rate_lock  \\\n",
       "0        88.855738                   50     Paygo                True   \n",
       "1         8.143481                   50     Paygo                True   \n",
       "2         3.340111                   50     Paygo                True   \n",
       "3        13.617514                   50     Paygo                True   \n",
       "4        36.145663                   50     Paygo                True   \n",
       "\n",
       "   build_travel_time  time_savings  value_of_time_savings  net_benefits  \\\n",
       "0          60.707492      8.292508              62.193807   -164.501446   \n",
       "1          66.580231      2.419769              18.148269     -2.627975   \n",
       "2          67.891632      1.108368               8.312761     -0.208774   \n",
       "3          65.400841      3.599159              26.993693     -7.748303   \n",
       "4          62.619553      6.380447              47.853349    -44.364108   \n",
       "\n",
       "   cost_of_capacity_expansion  free_flow_time  initial_capacity  \n",
       "0                  226.695253              60               100  \n",
       "1                   20.776244              60               100  \n",
       "2                    8.521535              60               100  \n",
       "3                   34.741996              60               100  \n",
       "4                   92.217458              60               100  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.result.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:26.824020Z",
     "start_time": "2021-05-25T17:29:26.820474Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Scenario({'alpha': 0.15, 'beta': 4.0, 'input_flow': 100, 'value_of_time': 0.075, 'unit_cost_expansion': 100, 'interest_rate': 0.03, 'yield_curve': 0.01})"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.scenario"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can visualize the set of solutions using a\n",
    "[parallel coordinates](https://en.wikipedia.org/wiki/Parallel_coordinates) \n",
    "plot.  This figure is composed of a number of vertical axes, one for each \n",
    "column of data in the results DataFrame.  Each row of the DataFrame is\n",
    "represented by a chord that connects across each of the vertical axes.\n",
    "\n",
    "By default, the axes representing performance measures to be minimized are\n",
    "inverted in the parallel coordinates, such that moving up along any \n",
    "performance measure axis results in a \"better\" outcome for that performance\n",
    "measure.\n",
    "\n",
    "In the figure below, we can quickly see that pretty much all the all of the Pareto\n",
    "optimal policy solutions for our reference scenario share an amortization\n",
    "period of 50 years, and all share a debt type of 'Paygo'.  By contrast, the set of \n",
    "solutions include multiple different values for the expand capacity lever,\n",
    "ranging from 0 to 100.  These different values offer possible tradeoffs \n",
    "among the performance measures: lower levels of capacity expansion (shown\n",
    "in yellow) will maximize net benefits and minimize the cost of the project,\n",
    "but they will also fail to provide much travel time savings.  Conversely,\n",
    "larger levels of capacity expansion will provide better travel time savings, \n",
    "but will not perform as well on costs.  It is left up to the analysts and\n",
    "decision makers to judge what tradeoffs to make between these conflicting\n",
    "goals."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.327277Z",
     "start_time": "2021-05-25T17:29:26.826643Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "2140b28310324c9782b34d633a3574e6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ParCoordsViewer(children=(FigureWidget({\n",
       "    'data': [{'dimensions': [{'label': '(L) Expand Amount',\n",
       "         …"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "q=result.par_coords()\n",
    "q"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As noted above, nearly all but not exactly all of the identified Pareto optimal\n",
    "solutions in this figure share an amortization period of 50 years.  We can review a table \n",
    "of a subset of particular solutions using the `query` method of a pandas DataFrame.  \n",
    "In this example, we may want to see a table of the instances where the amortization period \n",
    "is not 50 years."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.347992Z",
     "start_time": "2021-05-25T17:29:27.329749Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>expand_capacity</th>\n",
       "      <th>amortization_period</th>\n",
       "      <th>debt_type</th>\n",
       "      <th>interest_rate_lock</th>\n",
       "      <th>build_travel_time</th>\n",
       "      <th>time_savings</th>\n",
       "      <th>value_of_time_savings</th>\n",
       "      <th>net_benefits</th>\n",
       "      <th>cost_of_capacity_expansion</th>\n",
       "      <th>free_flow_time</th>\n",
       "      <th>initial_capacity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.0</td>\n",
       "      <td>48</td>\n",
       "      <td>Paygo</td>\n",
       "      <td>False</td>\n",
       "      <td>69.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>60</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   expand_capacity  amortization_period debt_type  interest_rate_lock  \\\n",
       "6              0.0                   48     Paygo               False   \n",
       "\n",
       "   build_travel_time  time_savings  value_of_time_savings  net_benefits  \\\n",
       "6               69.0           0.0                    0.0           0.0   \n",
       "\n",
       "   cost_of_capacity_expansion  free_flow_time  initial_capacity  \n",
       "6                         0.0              60               100  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result.result.query(\"amortization_period != 50\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The first row in this table shows a particular edge case: when the capacity expansion is\n",
    "exactly zero, all of the remaining policy levers have no effect -- the details of debt\n",
    "financing are irrelevant when there is no debt at all, and thus no values of the other\n",
    "levers result in a Pareto-optimal solution that would dominate any other such solution.\n",
    "In cases such as these, an analyst with domain knowledge, who understands the underlying system being modeled,\n",
    "will be able to bring a more nuanced understanding of the results than can be achieved\n",
    "merely by applying the mathematical algorithms in TMIP-EMAT, and correctly infer\n",
    "that the 50 year amortization is always an optimal solution, and that the outlier\n",
    "solutions are not important."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lastly, a note on the interpretation of the visualization of parallel coordinates\n",
    "plots: for numerical parameters and measures, the range of values shown in each \n",
    "vertical axis of plot is determined not by the full range of possible values, but instead\n",
    "it only displays the range of values included in the solutions being visualized.\n",
    "For example, the `amortization_period` axis only shows values between 47 and 50, even\n",
    "though the actual range of values is defined in the scope to be between 15 and 50 years.\n",
    "Similarly, the range of values for `net_benefits` is between 0.08 and -194.18.\n",
    "Because the solutions being displayed are optimal, the top value of 0.08 is \n",
    "(barring numerical problems) the best value of `net_benefits` that might be obtained,\n",
    "but the bottom value of -194.18 is by no means the worst possible `net_benefits`\n",
    "outcome that could arise from various different policies.  Instead, this bottom\n",
    "value is not a worst outcome but *also an optimal value*, except it is conditional \n",
    "on also achieving some particular other desirable outcome.  In the example shown, this \n",
    "other desirable outcome is a high level of travel time savings.  It is left entirely\n",
    "up to the analyst and policy makers to judge whether this outcome is \"bad\" or not,\n",
    "relative to the other possible outcomes."
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "raw_mimetype": "text/restructuredtext"
   },
   "source": [
    ".. _methodology-worst-case-discovery:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Worst Case Discovery: Search over Uncertainties"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can apply the same multiobjective optimization tool in reverse to \n",
    "study the worst case outcomes from any particular set of policy lever\n",
    "settings.  To do so, we switch out the `searchover` argument from\n",
    "`'levers'` to `'uncertainties'`, and set `reverse_targets` to True,\n",
    "which will tell the optimization engine to search for the worst outcomes\n",
    "instead of the best ones.  We'll often also want to override the reference\n",
    "policy values with selected particular values, although it's possible\n",
    "to omit this reference argument to search for the worst case scenarios\n",
    "under the default policy lever settings."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.429566Z",
     "start_time": "2021-05-25T17:29:27.349950Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "df879a1b46e441feb1c6b61d8e810c3c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ConvergenceMetrics(children=(FigureWidget({\n",
       "    'data': [{'fill': 'tonexty',\n",
       "              'line': {'shape': '…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "worst = model.optimize(\n",
    "    nfe=10_000, \n",
    "    searchover='uncertainties', \n",
    "    reverse_targets = True,\n",
    "    check_extremes=1,\n",
    "    cache_file='./optimization_cache/road_test_search_over_uncs.gz',\n",
    "    reference={\n",
    "        'expand_capacity': 100.0, \n",
    "        'amortization_period': 50, \n",
    "        'debt_type': 'PayGo', \n",
    "        'interest_rate_lock': False,\n",
    "    }\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.666307Z",
     "start_time": "2021-05-25T17:29:27.431537Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "672c6f3b49204448b08850afade83711",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ParCoordsViewer(children=(FigureWidget({\n",
       "    'data': [{'dimensions': [{'label': '(X) alpha',\n",
       "                 …"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "worst.par_coords()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Using Robust Optimization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As discussed above, implementing robust optimization requires the\n",
    "definition of relevant robustness functions.  Because the functional\n",
    "form of these functions can be so many different things depending on\n",
    "the particular application, TMIP-EMAT does not implement a mechanism\n",
    "to generate them automatically.  Instead, it is left to the analyst to\n",
    "develop a set of robustness functions that are appropriate for each\n",
    "application.\n",
    "\n",
    "Each robustness function represents an aggregate performance measure,\n",
    "calculated based on the results from a group of individual runs of the\n",
    "underlying core model (or meta-model).  These runs are conducted with\n",
    "a common set of policy lever settings, and a variety of different \n",
    "exogenous uncertainty scenarios.  This allows us to create aggregate \n",
    "measures that encapsulate information from the distribution of possible\n",
    "outcomes, instead of for just one particular future scenario.\n",
    "\n",
    "A robust measure is created in TMIP-EMAT using the same `Measure` class\n",
    "used for performance measures that are direct model outputs.  Like any \n",
    "other measure, they have a `name` and `kind` (minimize, maximize, or info).\n",
    "The names used for robust measures must be unique new names that are \n",
    "not otherwise used in the model's scope, so you cannot use the same name\n",
    "as an existing performance measure. Instead, the names can (and usually \n",
    "should) be descriptive variants of the existing performance measures. \n",
    "For example, if an existing performance measure is `'net_benefits'`,\n",
    "you can name a robust measure `'min_net_benefits'`.\n",
    "\n",
    "In addition to the `name` and `kind`, robust measures have two important\n",
    "additional attributes: a `variable_name`, which names the underlying\n",
    "performance measure upon which this robust measure is based, and a\n",
    "`function` that describes how to aggregate the results.  The function\n",
    "should be a callable function, which accepts an array of performance\n",
    "measure values as its single argument, and returns a single numeric\n",
    "value that is the robust measure.  For example, the code below will \n",
    "create a robust measure that represents the minimum net benefit across \n",
    "all exogenous uncertainty scenarios."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.671752Z",
     "start_time": "2021-05-25T17:29:27.668747Z"
    }
   },
   "outputs": [],
   "source": [
    "from emat import Measure\n",
    "\n",
    "minimum_net_benefit = Measure(\n",
    "    name='Minimum Net Benefits',\n",
    "    kind=Measure.MAXIMIZE,\n",
    "    variable_name='net_benefits',\n",
    "    function=min,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As suggested earlier, this measure might be too sensitive to outliers\n",
    "in the set of exogenous uncertainty scenarios.  We can address this \n",
    "by creating a different robust measure, based on the same underlying\n",
    "performance measure, but which is based on the mean instead of the \n",
    "minimum value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.676397Z",
     "start_time": "2021-05-25T17:29:27.673591Z"
    }
   },
   "outputs": [],
   "source": [
    "expected_net_benefit = Measure(\n",
    "    name='Mean Net Benefits',\n",
    "    kind=Measure.MAXIMIZE,\n",
    "    variable_name='net_benefits',\n",
    "    function=numpy.mean,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or we can adopt an intermediate approach, focusing on the 5th percentile\n",
    "instead of the minimum, which avoids being overly sensitive to the \n",
    "most extreme tail ends of the distribution, but maintains a fairly \n",
    "risk-averse robustness approach.\n",
    "\n",
    "Note that normally, the `numpy.percentile` function requires two arguments\n",
    "instead of one: the array of values, and the target percentile value.\n",
    "Since the `function` of the robust measure needs to accept only a single \n",
    "argument, we can inject the `q=5` argument here using \n",
    "[functools.partial](https://docs.python.org/3/library/functools.html#functools.partial)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.680881Z",
     "start_time": "2021-05-25T17:29:27.678394Z"
    }
   },
   "outputs": [],
   "source": [
    "import functools\n",
    "\n",
    "pct5_net_benefit = Measure(\n",
    "    '5%ile Net Benefits',\n",
    "    kind = Measure.MAXIMIZE,\n",
    "    variable_name = 'net_benefits', \n",
    "    function = functools.partial(numpy.percentile, q=5), \n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also capture robustness measures that are not statistical versions\n",
    "of the performance measure (that can be contrasted directly with the \n",
    "performance measure outputs, like the mean or median), but rather more abstract \n",
    "measures, like the percentage of scenarios where the performance measure \n",
    "meets some target value.  For example, we can compute the percentage of scenarios\n",
    "for the road test example where the net benefits are negative.  To do so,\n",
    "we will use the `percentileofscore` function from the `scipy.stats` package.\n",
    "For this function, set the `kind` argument to `'strict'` to count only strictly\n",
    "negative results -- not scenarios where the net benefits are exactly zero -- or\n",
    "to `'weak'` to count all non-positive results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.685829Z",
     "start_time": "2021-05-25T17:29:27.683026Z"
    }
   },
   "outputs": [],
   "source": [
    "from scipy.stats import percentileofscore\n",
    "\n",
    "neg_net_benefit = Measure(\n",
    "    'Possibility of Negative Net Benefits',\n",
    "    kind = Measure.MINIMIZE,\n",
    "    variable_name = 'net_benefits', \n",
    "    function = functools.partial(percentileofscore, score=0, kind='strict'), \n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can of course also create robust measures based on other \n",
    "performance measures in the core model.  For example, in the \n",
    "Road Test model the total cost of the capacity expansion is\n",
    "subject to some uncertainty, and we may want to make policy\n",
    "choices not just to maximize net benefits but also trying to\n",
    "keep costs in check."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.689831Z",
     "start_time": "2021-05-25T17:29:27.687719Z"
    }
   },
   "outputs": [],
   "source": [
    "pct95_cost = Measure(\n",
    "    '95%ile Capacity Expansion Cost',\n",
    "    kind = Measure.MINIMIZE,\n",
    "    variable_name = 'cost_of_capacity_expansion', \n",
    "    function = functools.partial(numpy.percentile, q = 95), \n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We may also be interested in finding policies that will maximize the expected time savings.  \n",
    "Although we can easily conceptualize that these two goals are in opposition (increasing time\n",
    "savings pretty obviously goes hand in hand with increasing cost) we will be able to use\n",
    "the results of this robust optimization to visualize the tradeoffs and try to find an \n",
    "appropriate balance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.693895Z",
     "start_time": "2021-05-25T17:29:27.691262Z"
    }
   },
   "outputs": [],
   "source": [
    "expected_time_savings = Measure(\n",
    "    'Expected Time Savings',\n",
    "    kind = Measure.MAXIMIZE, \n",
    "    variable_name = 'time_savings', \n",
    "    function = numpy.mean,\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:27.699603Z",
     "start_time": "2021-05-25T17:29:27.695724Z"
    }
   },
   "outputs": [],
   "source": [
    "from emat.util.distributed import get_client"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:28.679005Z",
     "start_time": "2021-05-25T17:29:27.701353Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3a0dd0f2c3b447589189f44fd5e17a77",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ConvergenceMetrics(children=(FigureWidget({\n",
       "    'data': [{'fill': 'tonexty',\n",
       "              'line': {'shape': '…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "robust_result = model.robust_optimize(\n",
    "    robustness_functions=[\n",
    "        expected_net_benefit,\n",
    "        pct5_net_benefit,\n",
    "        neg_net_benefit,\n",
    "        pct95_cost,\n",
    "        expected_time_savings,\n",
    "    ],\n",
    "    scenarios=250,\n",
    "    nfe=25_000,\n",
    "    check_extremes=1,\n",
    "    evaluator=get_client(),\n",
    "    cache_file='./optimization_cache/road_test_robust_search.gz',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:28.899193Z",
     "start_time": "2021-05-25T17:29:28.681619Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "be0294becd09466ab0a3df4e65423e99",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ParCoordsViewer(children=(FigureWidget({\n",
       "    'data': [{'dimensions': [{'label': '(L) Expand Amount',\n",
       "         …"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "robust_result.par_coords()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Constraints\n",
    "\n",
    "The robust optimization process can be constrained to only include \n",
    "solutions that satisfy certain constraints. These constraints can \n",
    "be based on the policy lever parameters that are contained in the \n",
    "core model, the aggregate performance measures identified in the \n",
    "list of robustness functions, or some combination of levers and \n",
    "aggregate measures.  Importantly, the constraints *cannot* be imposed \n",
    "on the exogenous uncertainties, nor directly on the output measures \n",
    "from the core models (or the equivalent meta-model). This is because \n",
    "the robust version of the model aggregates a number of individual \n",
    "core model runs, and effectively hides these two components from \n",
    "the optimization engine.  \n",
    "\n",
    "One way to work around this limitation, at least on the output measures, \n",
    "is to write robustness functions that transmit the relevant output \n",
    "measures through the aggregation process. For example, to constrain \n",
    "the robust search only to instances where a particular output measure \n",
    "is always positive, then write a robustness function that takes the \n",
    "*minimum* value of the targeted performance measure, and write a \n",
    "constraint that ensures that the minimum value is always positive.  \n",
    "This approach should be used with caution, however, as it may severely \n",
    "limit the search space.\n",
    "\n",
    "For the road test example, we can define some constraints to consider \n",
    "solutions that are within the limited search space. To do so, we will use the \n",
    "`Constraint` class.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:28.903223Z",
     "start_time": "2021-05-25T17:29:28.901333Z"
    }
   },
   "outputs": [],
   "source": [
    "from emat import Constraint"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each `Constraint` needs to have a unique name\n",
    "(i.e. not the same as anything else in the scope or any robust\n",
    "measure).  Each `Constraint` is also defined by one or more \n",
    "`parameter_names` and/or `outcome_names`, plus a `function` that will be used to \n",
    "determine whether the constraint is violated.  The `function`\n",
    "should accept positional values for each of the `parameter_names` \n",
    "and `outcome_names`, in order, and return 0 if the constraint is not\n",
    "violated, and a positive number if it is violated.\n",
    "\n",
    "Two convenient class methods are provided within the `Constraint` class:\n",
    "`must_be_less_than` and `must_be_greater_than`, which can simplify\n",
    "the creation and legibility of simple constraints on a single\n",
    "parameter or outcome.  Each take a single argument, the threshold\n",
    "of the constraint."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:28.912588Z",
     "start_time": "2021-05-25T17:29:28.909993Z"
    }
   },
   "outputs": [],
   "source": [
    "c_min_expansion = Constraint(\n",
    "    \"Minimum Capacity Expansion\",\n",
    "    parameter_names=\"expand_capacity\",\n",
    "    function=Constraint.must_be_greater_than(10),\n",
    ")\n",
    "\n",
    "c_positive_mean_net_benefit = Constraint(\n",
    "    \"Minimum Net Benefit\",\n",
    "    outcome_names = \"Mean Net Benefits\",\n",
    "    function = Constraint.must_be_greater_than(0),\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is also possible to impose constraints based on a combination \n",
    "of inputs and outputs. For example, suppose that the total funds \n",
    "available for pay-as-you-go financing are only 3,000. We may thus \n",
    "want to restrict the robust search to only solutions that are almost \n",
    "certainly within the available funds at 99% confidence (a robustness\n",
    "measure that is an output we can construct) \n",
    "but only if the Paygo financing option is used (a model input). \n",
    "This kind of constraint can be created by giving both \n",
    "`parameter_names` and `outcomes_names`, and writing a constraint \n",
    "function that takes two arguments."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:28.917747Z",
     "start_time": "2021-05-25T17:29:28.914827Z"
    }
   },
   "outputs": [],
   "source": [
    "pct99_present_cost = Measure(\n",
    "    '99%ile Present Cost',\n",
    "    kind=Measure.INFO,\n",
    "    variable_name='present_cost_expansion',\n",
    "    function=functools.partial(numpy.percentile, q=99),\n",
    ")\n",
    "\n",
    "c_max_paygo = Constraint(\n",
    "    \"Maximum Paygo\",\n",
    "    parameter_names='debt_type',\n",
    "    outcome_names='99%ile Present Cost',\n",
    "    function=lambda i,j: max(0, j-3000) if i=='Paygo' else 0,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The constraints are then passed to the `robust_optimize` method in addition to the \n",
    "other arguments."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:28.997603Z",
     "start_time": "2021-05-25T17:29:28.919053Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "007c0797a82448fcbd36a7c785921781",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ConvergenceMetrics(children=(FigureWidget({\n",
       "    'data': [{'fill': 'tonexty',\n",
       "              'line': {'shape': '…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "robust_constrained = model.robust_optimize(\n",
    "    robustness_functions=[\n",
    "        expected_net_benefit,\n",
    "        pct5_net_benefit,\n",
    "        neg_net_benefit,\n",
    "        pct95_cost,\n",
    "        expected_time_savings,\n",
    "        pct99_present_cost,\n",
    "    ],\n",
    "    constraints = [\n",
    "        c_min_expansion, \n",
    "        c_positive_mean_net_benefit, \n",
    "        c_max_paygo,\n",
    "    ],\n",
    "    scenarios=250,\n",
    "    nfe=10_000,\n",
    "    check_extremes=1,\n",
    "    evaluator=get_client(),\n",
    "    cache_file='./optimization_cache/road_test_robust_search_constrained.gz',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2021-05-25T17:29:29.191767Z",
     "start_time": "2021-05-25T17:29:28.999797Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "fa0131ca90b94072bcbfedacf62b7560",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "ParCoordsViewer(children=(FigureWidget({\n",
       "    'data': [{'dimensions': [{'label': '(L) Expand Amount',\n",
       "         …"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "robust_constrained.par_coords()"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Raw Cell Format",
  "jupytext": {
   "cell_metadata_json": true,
   "encoding": "# -*- coding: utf-8 -*-",
   "formats": "ipynb,py:percent"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.1"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "007c0797a82448fcbd36a7c785921781": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_f74cfb5abc0242dab34ac80a6fc4c9c6",
        "IPY_MODEL_d294bfa87173409eb1e98922c3261a11"
       ],
       "layout": "IPY_MODEL_015639c0554a429a88904340dbc42671"
      }
     },
     "014ecbfa906243189f26cfd2cf260e0d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Value Time Save",
       "description_tooltip": "value_of_time_savings",
       "disabled": false,
       "layout": "IPY_MODEL_09f21b260a464e188490eadb8706e42a",
       "name": "value_of_time_savings",
       "style": "IPY_MODEL_5ce748b316974259bcc3a18b21ee4e25",
       "value": true
      }
     },
     "015639c0554a429a88904340dbc42671": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "01d828804d604bacbb8bf5f91934cc80": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "026fca5a3d04467bbccd302e1d671b53": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "053de6ae0e654b54a0f8aef1f8c4b664": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "059389d6c20c42029ccf0b5ccb24e620": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "96210ffb-44f8-4487-8d57-b0b0bf2b7fce",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900,
          10000,
          10276,
          10644,
          11012,
          11380,
          11748,
          12116,
          12484,
          12852,
          13220,
          13588,
          13956,
          14324,
          14692,
          15060,
          15428,
          15796,
          16164,
          16532,
          16900,
          17268,
          17636,
          18004,
          18372,
          18740,
          19108,
          19476,
          19844,
          20212,
          20580,
          20948,
          21316,
          21684,
          22052,
          22420,
          22788,
          23156,
          23524,
          23892,
          24260,
          24628,
          24996
         ],
         "y": [
          0,
          19,
          28,
          33,
          36,
          40,
          42,
          43,
          45,
          49,
          50,
          50,
          51,
          51,
          53,
          56,
          55,
          55,
          58,
          59,
          61,
          62,
          63,
          64,
          65,
          67,
          69,
          69,
          69,
          71,
          71,
          72,
          73,
          73,
          76,
          77,
          78,
          80,
          80,
          81,
          80,
          80,
          80,
          81,
          79,
          79,
          80,
          80,
          81,
          82,
          83,
          85,
          85,
          85,
          86,
          86,
          86,
          87,
          87,
          87,
          85,
          85,
          86,
          87,
          87,
          87,
          87,
          87,
          87,
          89,
          89,
          89,
          89,
          89,
          89,
          89,
          89,
          89,
          89,
          89,
          89,
          90,
          90,
          89,
          89,
          89,
          89,
          89,
          89,
          90,
          91,
          91,
          91,
          91,
          91,
          91,
          91,
          92,
          92,
          92,
          92,
          105,
          117,
          118,
          116,
          118,
          121,
          121,
          121,
          121,
          123,
          123,
          125,
          126,
          126,
          126,
          129,
          130,
          133,
          137,
          139,
          142,
          146,
          147,
          147,
          147,
          149,
          152,
          154,
          155,
          155,
          156,
          158,
          160,
          160,
          159,
          160,
          161,
          162,
          162,
          163,
          164
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Number of Solutions"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "06a685d0b5ad4f41932d92f57e578675": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Amortization",
       "description_tooltip": "amortization_period",
       "disabled": false,
       "layout": "IPY_MODEL_377c4eee19404cf495fb70daa8bedac8",
       "name": "amortization_period",
       "style": "IPY_MODEL_20a6766f09a2428dbecae113e3b4078c",
       "value": true
      }
     },
     "07d21fbc03c94ff39c28f91774a320b5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "align_items": "center"
      }
     },
     "086212bedcff429d97869abbcf3275e5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "089a81f8106d4de086887e5482030419": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "08a779a07e3745a6aa25359c7d17ec7e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "09f21b260a464e188490eadb8706e42a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "0b6b31cdcfaa4e63aa0067c89cbf061a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Amortization",
       "description_tooltip": "amortization_period",
       "disabled": false,
       "layout": "IPY_MODEL_18e2bb2d60ea4a9195ca0e92fc91296f",
       "name": "amortization_period",
       "style": "IPY_MODEL_da8cec26a26e44abbd0f50c848c52ea5",
       "value": true
      }
     },
     "0b81840a3a1a43cdad9178fe4f5aad34": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "0c26eeec10ef4ed1995d53be81eef1dc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        " ",
        "   Clear Selection Constraints",
        "-- (X) Uncertainties --",
        "   Show All Exogenous Uncertainties",
        "   Hide All Exogenous Uncertainties",
        "-- (L) Levers --",
        "   Show All Policy Levers",
        "   Hide All Policy Levers",
        "-- (M) Measures --",
        "   Show All Performance Measures",
        "   Hide All Performance Measures"
       ],
       "description": "View:",
       "index": 0,
       "layout": "IPY_MODEL_57b1f299a4684abd95e93c881849cf39",
       "style": "IPY_MODEL_0d92010dd025457c9c971f1bbb7b6296"
      }
     },
     "0c5bb5add4604aa7bd83ef969634914b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "AccordionModel",
      "state": {
       "_titles": {
        "0": "Axes"
       },
       "children": [
        "IPY_MODEL_3b23f29d093748f88d4954237bdaedd7"
       ],
       "layout": "IPY_MODEL_bbaa7eb2087a485baac81bec287e21c2",
       "selected_index": null
      }
     },
     "0c9accdfb59948969e73909183d6eaa8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "0ce72ea818de4c6e99ce65131f0987a0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "0cf8232fd8bc4e9db7181177b06fe93e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Rate Lock",
       "description_tooltip": "interest_rate_lock",
       "disabled": false,
       "layout": "IPY_MODEL_5d6e33e563b04f2a930873b7e3d385a2",
       "name": "interest_rate_lock",
       "style": "IPY_MODEL_086212bedcff429d97869abbcf3275e5",
       "value": true
      }
     },
     "0d577251fcdf405696aeeb22212061a4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "0d92010dd025457c9c971f1bbb7b6296": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "0faa27f859ee4929a911272eab521fe4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Time Savings",
       "description_tooltip": "time_savings",
       "disabled": false,
       "layout": "IPY_MODEL_101932c2c77e437bafcec1a0e37d0d4d",
       "name": "time_savings",
       "style": "IPY_MODEL_9863abac8fae4d3fb6d03d325ca90543",
       "value": true
      }
     },
     "101932c2c77e437bafcec1a0e37d0d4d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "11b489d3cf32473190dc7bafaa792220": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "13d69ba13d92491092e07cc24bbae9a7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        "< None >",
        "expand_capacity",
        "amortization_period",
        "debt_type",
        "interest_rate_lock",
        "Mean Net Benefits",
        "5%ile Net Benefits",
        "Possibility of Negative Net Benefits",
        "95%ile Capacity Expansion Cost",
        "Expected Time Savings",
        "99%ile Present Cost"
       ],
       "description": "Colorize:",
       "index": 1,
       "layout": "IPY_MODEL_a727ecc4e9b443b2a9ec0045441d1602",
       "style": "IPY_MODEL_6b51e2fde3ec4c51baaeb6eed0f69c1c"
      }
     },
     "13e3571807f94873ac36e370e000ea9c": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_7ce2da3018174ae5b18b8c4626a11d8d"
      }
     },
     "14f1cd3191784d91a1b64d71b8c01581": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "1888024f36cb40e9bc25a5341dceb3b4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "18e2bb2d60ea4a9195ca0e92fc91296f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "1b93c9328adf4e4b88d93804b8c24892": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Expected Time Savings",
       "description_tooltip": "Expected Time Savings",
       "disabled": false,
       "layout": "IPY_MODEL_5223fdf0c1764e8c80d1654005f65ac3",
       "name": "Expected Time Savings",
       "style": "IPY_MODEL_6d6f0a5dc53e478490cb2137a6d8b8d0",
       "value": true
      }
     },
     "1b94234d121c48eea083d54787862bb6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Debt Type",
       "description_tooltip": "debt_type",
       "disabled": false,
       "layout": "IPY_MODEL_320d3b6ce82f4d79a648625fe0e13ee8",
       "name": "debt_type",
       "style": "IPY_MODEL_89c24bf3f2e54c6f84ea057811468c9b",
       "value": true
      }
     },
     "1c71452b9d2347839502d626c2cfb932": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "BoxModel",
      "state": {
       "children": [
        "IPY_MODEL_b9c3217164784e52981a57c62c93230d",
        "IPY_MODEL_0b6b31cdcfaa4e63aa0067c89cbf061a",
        "IPY_MODEL_1b94234d121c48eea083d54787862bb6",
        "IPY_MODEL_81e06a010ef14faba28bb9f98375d163",
        "IPY_MODEL_eb19a60c356741ec8bf84b81a0c913e9",
        "IPY_MODEL_eb9da36caabd4f50acf0e4fcf39cfbf0",
        "IPY_MODEL_3b56e8b6c3754673ab16db717294e3ad",
        "IPY_MODEL_9aad9e3663724276bcd6fc4e63742086",
        "IPY_MODEL_9a99e4bda3c04e7d9f7c156d942a8b52"
       ],
       "layout": "IPY_MODEL_3c367fc326c348a5a39fdc663cecbfe8"
      }
     },
     "1d2af0979bea4a1fbc1b2302cf6f6a03": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "1d50ea51e7084c58b99c058b5f92a40d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "20a6766f09a2428dbecae113e3b4078c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "2140b28310324c9782b34d633a3574e6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_de8be3fc5e2a4c7ea102ce38a8512a38",
        "IPY_MODEL_e408b6be38be46b3bc84ff176d2a9ce4",
        "IPY_MODEL_0c5bb5add4604aa7bd83ef969634914b",
        "IPY_MODEL_340a17e05d064780974eae7814e684bf"
       ],
       "layout": "IPY_MODEL_adef953ca5944568a1c32bb87e8c95d9"
      }
     },
     "219972e36d644c659383c19dd08b5c27": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "236d0426ca12481f93dc72ecb001a11c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        "< None >",
        "expand_capacity",
        "amortization_period",
        "debt_type",
        "interest_rate_lock",
        "build_travel_time",
        "time_savings",
        "value_of_time_savings",
        "net_benefits",
        "cost_of_capacity_expansion",
        "free_flow_time",
        "initial_capacity"
       ],
       "description": "Colorize:",
       "index": 1,
       "layout": "IPY_MODEL_08a779a07e3745a6aa25359c7d17ec7e",
       "style": "IPY_MODEL_cee5bac97eee42429387f61a02a764de"
      }
     },
     "2437ffe81d9b4eb1967df0a3fc1ae1c0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "244b12d8c7754a90a7514918145b1d11": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "259ff572890f459da705063a46d9e988": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "AccordionModel",
      "state": {
       "_titles": {
        "0": "Axes"
       },
       "children": [
        "IPY_MODEL_fd486319b7a54ff492b8860a3a0dcc4e"
       ],
       "layout": "IPY_MODEL_a10c06ecac874575a929359a25f3f6d6",
       "selected_index": null
      }
     },
     "2731fca13a8a45d584c7c405da4322c3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "27792d61c5024604b9a8a1070ed9273e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "27ecdbc153764aada7b87bdf0f5704fe": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "290c364a2cc14cb883546a8acc47cf94": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "2a6eedff86ab4f9696d3a57c6608660a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "2b0b770b83e04939916799578f0ab7e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "2e97d66c474d41a389704b0c8c75289d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "2f9e075708e94b1ca97784c214dc07ce": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "3017f01c64514208a9f1f83fabd144ed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "AccordionModel",
      "state": {
       "_titles": {
        "0": "Axes"
       },
       "children": [
        "IPY_MODEL_1c71452b9d2347839502d626c2cfb932"
       ],
       "layout": "IPY_MODEL_8770e2700d764e2ba049b3bb68d8d00d",
       "selected_index": null
      }
     },
     "305270ddfda34926a5491e0ea82be56e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "3169c455cec2494887827bbf605c6c3c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "320d3b6ce82f4d79a648625fe0e13ee8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "3237616956994690b62a8e6c279c8465": {
      "buffers": [
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         0,
         "values",
         "value"
        ]
       },
       {
        "data": "aG7AJUelFEBi3NJulKgVQGhuwCVHpRRAUkeDJ4iyFEAd1qlZ0h4NQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAHdapWdIeDUAGs5bx0hMOQCcGpNbZ8RBA9P7gXdZdEEBiur+mbGANQKLSwHsp/hVAUkeDJ4iyFEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAWQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQAAAAAAAAAxAAAAAAAAADEAAAAAAAAAMQA==",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         1,
         "values",
         "value"
        ]
       },
       {
        "data": "/Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQP/yp8dJNYlA//Knx0k1iUD/8qfHSTWJQPw==",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         3,
         "values",
         "value"
        ]
       },
       {
        "data": "AAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQAAAAAAAIGJAAAAAAAAgYkAAAAAAACBiQA==",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         4,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         5,
         "values",
         "value"
        ]
       },
       {
        "data": "exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUP3sUrkfhepQ/exSuR+F6lD97FK5H4XqUPw==",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         6,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         7,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         8,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         9,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         10,
         "values",
         "value"
        ]
       },
       {
        "data": "W9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QFvVGhL81nxAW9UaEvzWfEBb1RoS/NZ8QA==",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         11,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "line",
         "color",
         "value"
        ]
       }
      ],
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "dimensions": [
          {
           "label": "(X) alpha",
           "name": "alpha",
           "range": [
            0.1,
            0.2
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(X) beta",
           "name": "beta",
           "range": [
            3.5,
            5.5
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(X) Input Flow",
           "name": "input_flow",
           "range": [
            80,
            150
           ],
           "values": [
            80,
            80,
            80,
            82,
            88,
            80,
            80,
            83,
            88,
            136,
            133,
            129,
            88,
            133,
            117,
            144,
            122,
            85,
            99,
            148,
            133,
            121,
            134,
            136,
            119,
            131,
            102,
            120,
            147,
            119,
            102,
            103,
            138,
            115,
            118,
            146,
            150,
            102,
            118,
            150,
            146,
            131,
            115,
            146,
            150,
            100,
            132,
            132,
            136,
            150,
            150,
            149,
            98,
            131,
            103,
            96,
            131,
            135,
            116,
            125,
            81,
            148,
            132,
            97,
            82,
            130,
            97,
            148,
            132,
            133,
            137,
            133,
            150,
            116,
            148,
            148,
            132,
            90,
            134,
            131,
            83,
            129,
            88,
            144,
            122,
            85,
            99,
            133,
            134,
            136,
            147,
            119,
            102,
            138,
            146,
            118,
            115,
            100,
            132,
            149,
            98,
            131,
            103,
            96,
            135,
            125,
            81,
            148,
            97,
            82,
            130,
            137,
            150,
            116,
            90,
            88,
            129,
            117,
            122,
            85,
            99,
            133,
            121,
            134,
            136,
            120,
            147,
            119,
            102,
            138,
            146,
            118,
            115,
            100,
            132,
            149,
            98,
            131,
            103,
            96,
            135,
            125,
            81,
            97,
            82,
            148,
            137,
            150,
            116,
            90,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            80,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150,
            150
           ]
          },
          {
           "label": "(X) Value of Time",
           "name": "value_of_time",
           "range": [
            0.001,
            0.001
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(X) Unit Cost Expand",
           "name": "unit_cost_expansion",
           "range": [
            145,
            145
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(X) Interest Rate",
           "name": "interest_rate",
           "range": [
            0.025259859556148147,
            0.03988666636189074
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(X) Yield Curve",
           "name": "yield_curve",
           "range": [
            0.02,
            0.02
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) Build Time",
           "name": "build_travel_time",
           "range": [
            64.38425360665872,
            60.03885806788815
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Time Savings",
           "name": "time_savings",
           "range": [
            1.7196573437929672,
            45.21791368470065
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Value Time Save",
           "name": "value_of_time_savings",
           "range": [
            0.13757258750343737,
            6.782687052705097
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Net Benefits",
           "name": "net_benefits",
           "range": [
            -461.29896811609655,
            -454.65385365089486
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) Cost of Expand",
           "name": "cost_of_capacity_expansion",
           "range": [
            461.4365407036,
            461.4365407036
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             302
            ],
            "value": {}
           }
          }
         ],
         "domain": {
          "y": [
           0,
           0.7
          ]
         },
         "labelangle": -90,
         "labelfont": {
          "color": "#AA0000"
         },
         "line": {
          "cmax": 0.2,
          "cmin": 0.1,
          "color": {
           "dtype": "float64",
           "shape": [
            302
           ],
           "value": {}
          },
          "colorbar": {
           "title": {
            "side": "right",
            "text": "alpha"
           }
          },
          "colorscale": [
           [
            0,
            "#440154"
           ],
           [
            0.1111111111111111,
            "#482878"
           ],
           [
            0.2222222222222222,
            "#3e4989"
           ],
           [
            0.3333333333333333,
            "#31688e"
           ],
           [
            0.4444444444444444,
            "#26828e"
           ],
           [
            0.5555555555555556,
            "#1f9e89"
           ],
           [
            0.6666666666666666,
            "#35b779"
           ],
           [
            0.7777777777777778,
            "#6ece58"
           ],
           [
            0.8888888888888888,
            "#b5de2b"
           ],
           [
            1,
            "#fde725"
           ]
          ],
          "reversescale": true,
          "showscale": true
         },
         "type": "parcoords",
         "uid": "eac22e4d-ce7c-46a3-9f40-6b2533f072eb"
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 1,
       "_layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        }
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_py2js_update": {},
       "_view_count": 1
      }
     },
     "326c0938d3ad4951ba6822778f6ad096": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Rate Lock",
       "description_tooltip": "interest_rate_lock",
       "disabled": false,
       "layout": "IPY_MODEL_a2cd206ecb1d46e3ab2f402cd201eaa3",
       "name": "interest_rate_lock",
       "style": "IPY_MODEL_37395124a8fb4143b0cf1e12714dc625",
       "value": true
      }
     },
     "340a17e05d064780974eae7814e684bf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_859a356d19324bb0a8470b7636d5b48c",
       "style": "IPY_MODEL_290c364a2cc14cb883546a8acc47cf94",
       "value": "\n\t\t\t(M-) Performance Measure to Minimize<br>\n\t\t\t(M+) Performance Measure to Maximize<br>\n\t\t\t(M) Performance Measure without preferred direction<br>\n\t\t\t(L) Policy Lever<br>\n\t\t\t(X) Exogenous Uncertainty\n\t\t"
      }
     },
     "340ba2ebcf304508a3244973c2951eb7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "36650f76131e499fb4d7e50682f1cfde": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_0ce72ea818de4c6e99ce65131f0987a0"
      }
     },
     "37395124a8fb4143b0cf1e12714dc625": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "373f04dbc8424f4cb32c0aeed5f66748": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "377c4eee19404cf495fb70daa8bedac8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "387183a91815439d96b8423fcde3a4e1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) Value of Time",
       "description_tooltip": "value_of_time",
       "disabled": false,
       "layout": "IPY_MODEL_e44af3355557463ca4ee8a3ec4e63ab3",
       "name": "value_of_time",
       "style": "IPY_MODEL_73cd3586985941a4b6ff596eb0acc164",
       "value": true
      }
     },
     "3a0dd0f2c3b447589189f44fd5e17a77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_79978667b1e44298bf0da859634679cb",
        "IPY_MODEL_059389d6c20c42029ccf0b5ccb24e620"
       ],
       "layout": "IPY_MODEL_053de6ae0e654b54a0f8aef1f8c4b664"
      }
     },
     "3b23f29d093748f88d4954237bdaedd7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "BoxModel",
      "state": {
       "children": [
        "IPY_MODEL_9b2b1ae924f5483098bb6269279ecf1c",
        "IPY_MODEL_b1eeca6e1ede4bcdaf6772fcf5a13e4e",
        "IPY_MODEL_54b6e07bf1064eecb4524509365b7d45",
        "IPY_MODEL_0cf8232fd8bc4e9db7181177b06fe93e",
        "IPY_MODEL_ba2f2dea894843bbaa75ac2c2dadc83b",
        "IPY_MODEL_0faa27f859ee4929a911272eab521fe4",
        "IPY_MODEL_014ecbfa906243189f26cfd2cf260e0d",
        "IPY_MODEL_5f14491243cd41f3a1c5faa20b032411",
        "IPY_MODEL_a8b46a0645944facba5b1100a2faff1d"
       ],
       "layout": "IPY_MODEL_81cea01d750448639a08e008a7eb9a28"
      }
     },
     "3b56e8b6c3754673ab16db717294e3ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) Possibility of Negative Net Benefits",
       "description_tooltip": "Possibility of Negative Net Benefits",
       "disabled": false,
       "layout": "IPY_MODEL_305270ddfda34926a5491e0ea82be56e",
       "name": "Possibility of Negative Net Benefits",
       "style": "IPY_MODEL_4b4477bb193448dcbb5e641d087fe6c2",
       "value": true
      }
     },
     "3c367fc326c348a5a39fdc663cecbfe8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "3e0e28bbc82545d79508db376782e737": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "3fcd5ce57da443b8bc7160b62ff8e2f4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "435b146d4be14344a762614b0a41e920": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_79e1c9bfe0f14094aa3ad44d3e54526a",
       "style": "IPY_MODEL_b51b5087e6bf4537972e640cca0fceb5",
       "value": "\n\t\t\t(M-) Performance Measure to Minimize<br>\n\t\t\t(M+) Performance Measure to Maximize<br>\n\t\t\t(M) Performance Measure without preferred direction<br>\n\t\t\t(L) Policy Lever<br>\n\t\t\t(X) Exogenous Uncertainty\n\t\t"
      }
     },
     "4360d48ed2bc446b9917c55f64f9c4c9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "47091937803741e1bd6206b950f8cfe1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        " ",
        "   Clear Selection Constraints",
        "-- (X) Uncertainties --",
        "   Show All Exogenous Uncertainties",
        "   Hide All Exogenous Uncertainties",
        "-- (L) Levers --",
        "   Show All Policy Levers",
        "   Hide All Policy Levers",
        "-- (M) Measures --",
        "   Show All Performance Measures",
        "   Hide All Performance Measures"
       ],
       "description": "View:",
       "index": 0,
       "layout": "IPY_MODEL_0d577251fcdf405696aeeb22212061a4",
       "style": "IPY_MODEL_4b7f763852784e6eabf874db97684e02"
      }
     },
     "47f7ddc9729a4d4d96d9bb214677db4b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "47f8d93df6b34263b9972ec00712c923": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "49b49d1ad8b14a38ac6692469d86da92": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "4b4477bb193448dcbb5e641d087fe6c2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "4b7f763852784e6eabf874db97684e02": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "4d06f0698ca84e07b1f001257e81617d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "519e38fe80d34b2884f9cae31473fba0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "5223fdf0c1764e8c80d1654005f65ac3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "54a485d281b34f8da4ffd4353cff5c9e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "54b6e07bf1064eecb4524509365b7d45": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Debt Type",
       "description_tooltip": "debt_type",
       "disabled": false,
       "layout": "IPY_MODEL_b8405f7e3c7c47518210647f4f54864e",
       "name": "debt_type",
       "style": "IPY_MODEL_0c9accdfb59948969e73909183d6eaa8",
       "value": true
      }
     },
     "57b1f299a4684abd95e93c881849cf39": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "57e68c2a5456470791faf84b7ed233bc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) Unit Cost Expand",
       "description_tooltip": "unit_cost_expansion",
       "disabled": false,
       "layout": "IPY_MODEL_2f9e075708e94b1ca97784c214dc07ce",
       "name": "unit_cost_expansion",
       "style": "IPY_MODEL_dcd07ea24f9b4916a414517e8aaf6fbd",
       "value": true
      }
     },
     "5809eecc88544218a0f5bdac91fafd4c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "5810c1cfdefa4c99885ed889dfc582f4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "58e13c7e778943638d94891e098ede6a": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "a0b257e8-52c0-4d88-b646-689040e9d09b",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900,
          10000
         ],
         "y": [
          0,
          16,
          19,
          27,
          31,
          34,
          32,
          34,
          43,
          46,
          43,
          44,
          43,
          42,
          43,
          45,
          48,
          50,
          51,
          53,
          52,
          52,
          53,
          55,
          56,
          52,
          51,
          50,
          49,
          50,
          48,
          49,
          53,
          55,
          55,
          56,
          58,
          60,
          60,
          62,
          63,
          67,
          68,
          69,
          69,
          68,
          68,
          68,
          68,
          68,
          68,
          68,
          68,
          68,
          68,
          67,
          67,
          67,
          68,
          69,
          69,
          65,
          65,
          65,
          65,
          65,
          66,
          66,
          67,
          67,
          68,
          68,
          70,
          70,
          70,
          71,
          72,
          72,
          72,
          72,
          72,
          72,
          73,
          73,
          74,
          75,
          76,
          76,
          77,
          77,
          77,
          77,
          77,
          77,
          77,
          77,
          77,
          77,
          78,
          79,
          79
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Number of Solutions"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "5a5eac5191d142b89d3cf1a96ac9bf24": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "5b544a8af4664a7ea6fdbd48b02171b4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "width": "100%"
      }
     },
     "5ce748b316974259bcc3a18b21ee4e25": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "5d6e33e563b04f2a930873b7e3d385a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "5d867cf9e18946f2a83e03a6d3ec7199": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "5e0cd45571f7431883eeb6881c3407c6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_71b819e101124166a3d8e71ba401d722",
       "style": "IPY_MODEL_47f8d93df6b34263b9972ec00712c923",
       "value": "\n\t\t\t(M-) Performance Measure to Minimize<br>\n\t\t\t(M+) Performance Measure to Maximize<br>\n\t\t\t(M) Performance Measure without preferred direction<br>\n\t\t\t(L) Policy Lever<br>\n\t\t\t(X) Exogenous Uncertainty\n\t\t"
      }
     },
     "5f14491243cd41f3a1c5faa20b032411": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Net Benefits",
       "description_tooltip": "net_benefits",
       "disabled": false,
       "layout": "IPY_MODEL_4d06f0698ca84e07b1f001257e81617d",
       "name": "net_benefits",
       "style": "IPY_MODEL_dfe91ff3b264484db64e8da4ee1383f8",
       "value": true
      }
     },
     "612e426ce9c141fda527639b233e3e9a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) beta",
       "description_tooltip": "beta",
       "disabled": false,
       "layout": "IPY_MODEL_bb7d620c17514f0587da238c925f0245",
       "name": "beta",
       "style": "IPY_MODEL_738d7367cb5f4fbabd27b0a7fad37a00",
       "value": true
      }
     },
     "657b251530914e08a8f0504f9de9b819": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "65d78072b6574fff91fd74546867cdfa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Debt Type",
       "description_tooltip": "debt_type",
       "disabled": false,
       "layout": "IPY_MODEL_eabdbf080850494883f9f24b41477092",
       "name": "debt_type",
       "style": "IPY_MODEL_dc76ce7a7e4e4632a9a8f3a14d598b65",
       "value": true
      }
     },
     "672c6f3b49204448b08850afade83711": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_3237616956994690b62a8e6c279c8465",
        "IPY_MODEL_705707990f284041b7bee1dd01ac9b1e",
        "IPY_MODEL_259ff572890f459da705063a46d9e988",
        "IPY_MODEL_fdc3465ba3a343d8867c837dcbb05894"
       ],
       "layout": "IPY_MODEL_07d21fbc03c94ff39c28f91774a320b5"
      }
     },
     "6b51e2fde3ec4c51baaeb6eed0f69c1c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "6b96717b27b44e4f98b4119f7056a450": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "6d05f79bc52f43ceaa4b810256208fb5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "6d6f0a5dc53e478490cb2137a6d8b8d0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "6e9d053133d24bb4a27c350806756977": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        " ",
        "   Clear Selection Constraints",
        "-- (X) Uncertainties --",
        "   Show All Exogenous Uncertainties",
        "   Hide All Exogenous Uncertainties",
        "-- (L) Levers --",
        "   Show All Policy Levers",
        "   Hide All Policy Levers",
        "-- (M) Measures --",
        "   Show All Performance Measures",
        "   Hide All Performance Measures"
       ],
       "description": "View:",
       "index": 0,
       "layout": "IPY_MODEL_1d50ea51e7084c58b99c058b5f92a40d",
       "style": "IPY_MODEL_d0ccd24b4c6443d59e172aef9c16c181"
      }
     },
     "70324cb49ccd42208ca33747b9fd92e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_ed86ee2ca602462eb43f88a1884188b8",
        "IPY_MODEL_70c0681cc2994983a24f40903d818c40"
       ],
       "layout": "IPY_MODEL_89c6c02cbe6649ad82bab0903c3fc3f3"
      }
     },
     "705707990f284041b7bee1dd01ac9b1e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_b1e9f562c0404c86b04dc5cccc6b132a",
        "IPY_MODEL_0c26eeec10ef4ed1995d53be81eef1dc"
       ],
       "layout": "IPY_MODEL_bf5f9781d75d4429ac96412962cd0c69"
      }
     },
     "707e8128acaf41748f74b243a1bc823a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) Cost of Expand",
       "description_tooltip": "cost_of_capacity_expansion",
       "disabled": false,
       "layout": "IPY_MODEL_9402a3ae471f4fda980abbeed07f59d9",
       "name": "cost_of_capacity_expansion",
       "style": "IPY_MODEL_5a5eac5191d142b89d3cf1a96ac9bf24",
       "value": true
      }
     },
     "70c0681cc2994983a24f40903d818c40": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        " ",
        "   Clear Selection Constraints",
        "-- (X) Uncertainties --",
        "   Show All Exogenous Uncertainties",
        "   Hide All Exogenous Uncertainties",
        "-- (L) Levers --",
        "   Show All Policy Levers",
        "   Hide All Policy Levers",
        "-- (M) Measures --",
        "   Show All Performance Measures",
        "   Hide All Performance Measures"
       ],
       "description": "View:",
       "index": 0,
       "layout": "IPY_MODEL_01d828804d604bacbb8bf5f91934cc80",
       "style": "IPY_MODEL_2a6eedff86ab4f9696d3a57c6608660a"
      }
     },
     "71b819e101124166a3d8e71ba401d722": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "733690425f224fecaab544051bd5a130": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) Build Time",
       "description_tooltip": "build_travel_time",
       "disabled": false,
       "layout": "IPY_MODEL_2731fca13a8a45d584c7c405da4322c3",
       "name": "build_travel_time",
       "style": "IPY_MODEL_afc0cb933237431da56a06953f749f5b",
       "value": true
      }
     },
     "738d7367cb5f4fbabd27b0a7fad37a00": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "73cd3586985941a4b6ff596eb0acc164": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "749ce9ffebfb445cacc4eef962362ad3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "7550410d729d43d1bfd00fc7a9c7c485": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "758330ecb8c64d388173636e86524af8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "77f66753dc4c491895feec8f6cf14421": {
      "buffers": [
       {
        "data": "YAuVrcGFN0A6qaeD7L42QNAzjmpgnjdA1GdOrdQ2MkAC+UmcA4gyQEdglha2ajdAKs75QBwhQED4w5rkSbAoQGLhNCC9JCRAv73io3A3MEACJlADeaAvQBpoGuIf0yVAwv6eZDgLJkDKgA6OtEsyQLIx/T4xJj9A3o8y8Ld7MUADbh9zXIovQLdskFb9DTNAamWa6377LkBgC5WtwYU3QJtDlSnG0DNAl2I2Jkz0NUB+/+h7SjU1QMJG1CTrEzZA1r7IQct5PkARYVLFUIQ0QA3tKlUfvjJAkKPx2U8CKkAQUBJ+dmM+QOQI0rueAzNANKJnGEv0PUCmkt+LeggwQFCe0pKKZzZAsK3FkN97M0AxWW8qgog+QO5DKzS9fzpAlYYA28jSPEACiCbh00c7QIKXTGSwvzRA/0HH1R0kOEC0sUzoN54/QO1DBd/fOTdAZjSi+AdgOEDIb4OaHlw2QLxaqfQicDRAlELZrxCaMUBc7eLQQiUtQP6bgknIkT1AmwfihkeFQUAyAkVzQ0pBQJ5JaHVD0DhA1hhAP3wdJ0CrgB5MMRk3QGd5jHcqPzZAKs75QBwhQEDN8rYBi2s1QNoIib3VWTxA9iTJC0JLM0CooDVaAZ1CQOjR/5yFvSxAn4K9F+3BQECD5pUtV0EmQC3A79fvTEBAlWGaAxHcQEBWO24QVnpAQL+94qNwNzBAGmga4h/TJUDC/p5kOAsmQMqADo60SzJA3o8y8Ld7MUADbh9zXIovQJdiNiZM9DVAfv/oe0o1NUAN7SpVH74yQJCj8dlPAipAEFASfnZjPkDkCNK7ngMzQDSiZxhL9D1AUJ7SkopnNkD/QcfVHSQ4QLSxTOg3nj9A7UMF3985N0C8Wqn0InA0QJ5JaHVD0DhA1hhAP3wdJ0CrgB5MMRk3QM3ytgGLazVA9iTJC0JLM0Do0f+chb0sQIPmlS1XQSZALcDv1+9MQECVYZoDEdxAQFY7bhBWekBAOqmng+y+NkDQM45qYJ43QNRnTq3UNjJAAvlJnAOIMkBHYJYWtmo3QPjDmuRJsChAYuE0IL0kJEACJlADeaAvQLIx/T4xJj9At2yQVv0NM0BqZZrrfvsuQGALla3BhTdAm0OVKcbQM0B0CeXcqno7QMJG1CTrEzZA1r7IQct5PkARYVLFUIQ0QKaS34t6CDBAsK3FkN97M0CCl0xksL80QEj3a1+QmD1AZjSi+AdgOEDIb4OaHlw2QJRC2a8QmjFAXO3i0EIlLUCbB+KGR4VBQDICRXNDSkFAZ3mMdyo/NkAqzvlAHCFAQJ+CvRftwUBA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         0,
         "values",
         "value"
        ]
       },
       {
        "data": "SJQp8WZ/ob8QTuCk51p5v+6DZf7c6qM/hIC+3CcBAEDWOG5UL1AAQLaqSGnZdqE/uNFd+/sbnT/VDdqpDGYAQO50mkMT8P8/ch/MxYhWAEDzS2IgYIH/P460DBMDUgBASv2nSsn+/z+RuF8gl1oAQKgIutBd2aO/Fe+JjPCI/z/FnKqtrV0AQPxM9uNdb/8/KPbfBG7H/z/cSAaVj5eRP+K/9CDXMQBAQBfAMb2mSb86YFttl+uhP8iJJyILMqi/Ty44A6QYqb8yfKmuArX/P67TXqZDu/8//Gdp5rMFAEDAPNTM2GyRPxG86KhhYABAsNVEqS1fkj9Q3APhxL//P2B0TD1iYVk/Ot/2maPv/z/sI1U+DrmDv3CilP3mTpe/+D+MEMNrlD8wM4UYtdt7v7/MgsGTXABAWn0oN8jMoz+AZyYBgK5JP44HOtDUEqg/4PGZyOyRhb9oWGR8aUN3P/mDog7nHgBAHXoqGvoxAECp5aqLf5P/P0g1LoXQN5U/x2AjFpNWqL8u8e3+w/6Sv2JnApwjeKc/niBn5UtXAECNnW0XtJ2Uv/B/z+mD3J6/gP5eiC5anD/safOQR2mPv4iP/0QLtIC/UdZMJLxIAECYVXAt5xeCP7BZTR1phv8/GG8ilId8pD/fjU30ozwAQPwhVA8ahKU/EDrMVQ+CoT9lz62Z9COnv4JjWrI3OP8/RlYeQFhbAEDEsrVMtkb/P5VnFgprFABARAqs4JMIAEBlGEddzwUAQEAj9xet0kQ/kEx1RySwpD/hIIhx+9v/PxQ2jWyL2/8/pDrRebq3nL+bv8+9pbf/Pxb+xNAlRaU/aKob+Usulj/gkM0T/7hqPyjV1omduo2/Tp2zY0VtpD+TWzzfaOj/P+5CbKpnaaQ/b1iOFdoRAEAOFp7w5u+hPw02zZy8v52/AALZGIRRAECA9GTswv3/P/KYSnS7WwBAntQJhVgXpj+mw3VdqAOpP9B00TUQyHc/JKY7o6aulz/0X9y4C3WkvzAZVA9gUf8/dktSS2sbAEDgmCXg1Cqov0yfyHTr9f8/USYCGKaK/z8aliAOR0f/PyjGjgkox4g/od9M3M8dAECunvrgbZT/P6qPbHMePqi/Tt8G5aR8/z8N1obPHlecvz402NSqWaA/2AJQtQ/uoz+wcTxl2gcAQJHFthWXOv8/7y0rI1t1/z+pgjrIxTgAQJxI4VRil5Y/ILWkfrKYmL/2dc9LB0agP4WnVBzYHgBAFT+LznqE/z/EH+20ygakP7bC44v0J6A/vSvihK9tmb8o9bzUmfJ+P56W8N81VqE/",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         2,
         "values",
         "value"
        ]
       },
       {
        "data": "hKr3J+ZopD8CgOlJe9CoPxZvrfY4t6Y/ai1zzMZOoz8Q2X3SbEWoPz1GwpWt7KW/Z6HNRXh1qL8QbZ6xptKSP7SDUaUZp5W/M3eFR02/7z8ANKJrCl0Lv+xEWULBs/A/pp4mPjfF7j/MUbPPILDvPwAF8SGgmI2/2a0eIUc08D8MOSsnJWrvP3im/vnGPpI/LODzX2O7kT/9hvlb/pyiv7Z9SsnKeak/nmsC7oMn8D9CYiEBTCXwP4jo0EnOLo6/lpcIxYB2pj+10M2VJduov4GlNhESt/A/cpptJUdJ8D9GQy5lx5nwP+vawHc6je4/IZZGkIVM8D+c9K7s6p6Mv1B2zSx1JfA/EN/2LAEDob8XdmGsw5rvP2hgXI2voO8/BjwsLOMV7z+29NlUN7jvP82jW6zFqaG/YqWyG2dn8D/elB4L5XLwP+ctGKDUy+4/+JgtD+tKjT8eaKwXV8WQv/yNEJjd8e8/xEUuyxSCoz/ag6yQTKSovyACxQckTPA/sEag7Aq0jj8qmsjOe3iVvypcRJYhdO8/XO+CyiVs7j/YVEwObTXwPzT46C+PYpK/GLZ83d5wqb/JE+TRGVnwPxLaUO55i+4/DSV11YUP8D/BqYJaGLjuPywNACY+hfA/qOPEaEzPpr83NWMVp9TvPzv9hF6SkfA/OeTyzE9P7z9fZ9FdE6XvP5DOZMKDLHU/HRGWdZoTlr8AYMC56IlNv0LOLh35Qai/oG5/dOBTbD++033Mo+ihP8xcr6y+YYC/hk0ZJl+gpz+gl/LXHPuJP5ynyUawMJI/uvgCn4rfnr9WYpOlOzWhP/xK6B8lxaG/0BqI7gt2jj/o80J4vd6QPxgZ5YWRyHI/gN6VtRpYPL/6174KKmChP6ApQZqhpWQ/VEHoTccBmL9Ip8D4kjyaP4CTqV1HLGs/DMQwshwtlj9GROHcKOymPxiqZW/mfYs/+P4Hgqx5mT84XUX84BKlP4CGYSyWVKQ/whATZ+WN7z9c+hE2XSfvP/actyDFovA/qxTqmoy+8D8DRy86+pDuP8Cr3ptyoPA/jPloIP5p7j8FqB3zmjrvP7TwPGiYgfA/g+cO9Ho+8D/5UzOZF9vvPwHAHGl+gvA/+IVfUcyH8D8E7GszlxHwP9knWsX62+8/r7hjaWiT7z+cEfQhmWzwP+7/bIMWYPA/wmv0ottc7z8jjeNguRHwP2jVoT2q0+8/EFkVRCeM7j/w9vracbLwPw3Qi1mhK+8/x75GhTPB8D8DKVoySsPuP6H7Z7tOjPA/xffYkHPg7z+F/Urcfn7uP24IpeVLdu8/",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         3,
         "values",
         "value"
        ]
       },
       {
        "data": "kJv6q6qSQUD2FE8rWo9CQFrAqGtw0kFAvFdTMqj1VUCYTLw/EBlWQNQF+vOZ/0FA9rs2N3WbJECz++fEnkFSQAtFJFqqIlBAM0N5YFywVEAl1TmpibhUQFbbYsYOy1BAzcX4qFLlUEDLhpfSdLJVQAqiCmFsKjJAy/gTkWxVVUBo4BktG3BUQKzR0BtiUFZAPS/iCfyGVEAZbmzrEehBQM82qH4amlZAIc/teGqvREDJ9Tx1SihFQNVofd9gFENAJ/THxfsHNEBgZxDWRNdWQMN8aqWO4VVAygp9hbiUUkCIVWEnyHU4QP9q4y7L/FVA/FoI4AySOUBWHV/6VdlUQOkWh1ofYERAaN90Wu56VkCPEf2JyBU4QBnTOfa1xkBA+hPJELdaPEBEKoJ8COM/QPpahaEb6lZA1srljaoDQ0B1OShHeTI1QFDtB7V/w0NAvnWLTHMhQUDDTdU2dt1CQPdOAkdRe1ZAJvf/biatVUB5t9aUA/BTQKjKwq4XiTpAt7XFDnW2GUCDaYEGr5cfQHU53rx8a0JA75vQC/phUUDs9U3r0txDQDgxopK080JAcchO5D/2LUD/b8j6UQdFQH3OOLQ0eD1AUL/qkM0XVkChJqn1GVQRQHsF1VuskFNAplTEXFJuJkAZsZHLaf5QQMh7h9SldzJAbqD+dyh6LkDaalAYCXUxQD+HxcId9FRA/U82uqb4UEA1vQ7NXxNRQNs8uhjm/lVA22qk1nieVUD7pXUq/7FUQJZUGrjYK0NANlzioeSxQ0C6vCH53S9WQO4dPEUOy1JATqufH9tENECIVPDhPExWQAaKguZ0cDVA+FuJJZvUQkDXpzMNfllBQFE1bTEj1jBABNWvY3opQkC1Hj78tdBWQITIYz5xtUBAnhAcJkSSUUCihQWNDkVCQFQez2oujUNADFuQlGpoVkDj+kvQtsxTQJo3av/nLFFA7saGIDXxK0DBCfwQHC0lQOx65APw0ilAOXBh++QgRECsyhrzY3NDQM95xSOOqVVAgyG+/qLLVUB7BNZo/ZxDQHOkji0LDlJAhwIzBSvxT0Cs4X56d3ZUQOYfYLY0djZAZp9mFcUAVkCPoZGBQkZUQB5Bq9FSh0NA7KP8oE9HVkBgxlt8NnM/QLKpD9kgmkRA7gwAP/07OEBaaDnRi4FWQImhUM5YllRA031tN4YpVkC8VTiKapNWQOrtPvI7eDpAQ6CRgMHPQkB7qpvJMGhEQMO6Wl6bY1VAyvs9aCCzU0Atyfd+oIUmQJaLAMuuVSlAPw56A3B8REAxkadzFG4zQPa+tQbzrC9A",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         4,
         "values",
         "value"
        ]
       },
       {
        "data": "4KqjnQyUYMCM9HbESO9fwLoGSFTApmDA00HsAGB5SMCOoxdd2+9IwA8YFQswfmDAQHxd1i9tZ8DsbJSvToE/wPLXSAA3FTnAFb2AjdJqRcArZLUVWtxEwAeLmMA0/TvA9j3XrWZKPMBsKrWkqGlIwETf4qS+dGbAckwjRcg8R8B4ui6AmMdEwJpljjDas0nAYZhUF4xgRMCwt9l3apNgwCiiMgnQ0UrA2N06HEb6XMDZrnDp+vVbwHy4vKdy5F7AOB4vWOTtZcCo4jaeadpLwM4gO9XRD0nA0Jj9TUDiQMAKaPk6C25kwFKKgcv2dEnAlr4hY+UdZMAibHFdBTFFwMjD5GKAl13AokzB6gZVSsBUjvoqxYhkwMqInulQo2HAViziO5JNY8DMFowsWDJiwLV+w2YfMkzAluOZrD33X8DKgvGQZ1FlwPbcSdLLtl7AukVHiTA/YcD4hVeO+1RfwCQe3psPikvAXISinGWTR8DmpjMvMAJDwFKBVLbx1mPAlr3TPM9uacAUOzsdTxRpwLKSQ1KHcWDAE+WnQdnCPcBiK9S8IIpewATtB/3UJ1/AGNdaS4ZNZ8CuYjio3z9cwC6c1NS29mLAZMxzaWTdScDWu2iuzWVpwLMNbifVy0LAZrQQFXVDaMDGfCxWipQ8wMBNED+hB2bAXz8JoV3XZsCGgaF0eElmwGghIA/gd0XAkvapvxptO8BYGAMhM7w7wI66+sHRl0jAI3ZgWO1kR8BOn9eDu8tEwGLvksQ4s17AYWDdX6iKXcAgokiW8T5JwJXbHV0ItUDAyhmjZ4DcZcDgoIV7qaRJwL3hInpKhmXAYDP7V81mX8BWZRr89Q9hwC7pwx1O0GbAwOFR8eJXYMCkhTlUoLxLwCawT43Ql2HAMxrmQdlAPcDKB+0jRz5gwMqtesHA3l3AUK/7P6wNSsBF6GBbabVCwCQe6EyjCDzAcFp7V4CQZ8CSuuwBemtowDCL+C3r1WfATK0EOc4OXsAClDaxOEBfwHew0oNkS0jAnLFghC/BSMDemr0nkPlewPLsqp/17j/APpTmkzmtOcC6+LcCXtdEwFasdFWh+mTA2UdcxBGEScAMvT6kz2FEwMSKwiuMHl/AUEyUjnigSsAF2OhvvFZiwDK3WsFmJV3AheEgRyd+ZMAoGiUZsqdLwPzSInGsJ0XA76qXNVskSsAhbC/b9v5LwCYOH5LT22PAJGRpgaQkYMByHJ2w6YddwMboyBeWaEfA95nI+OcUQ8D2uqD7i81nwKwo3O2dd2fAVmeL7mZgXcC88eXGHchlwML6WCZksWbA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         5,
         "values",
         "value"
        ]
       },
       {
        "data": "AAAAAAAATkDMzMzMzMxNQMzMzMzMzE1AZmZmZmZmREBmZmZmZmZEQMzMzMzMzE1AAAAAAACAUEDNzMzMzMxCQJqZmZmZmUJAmZmZmZmZREAzMzMzMzNDQGZmZmZmZkJAZmZmZmZmQkDNzMzMzMxEQDMzMzMzM1BAmZmZmZmZRECZmZmZmZlEQJmZmZmZmURAMzMzMzMzQ0DMzMzMzMxNQJmZmZmZmURAzMzMzMzMTUDMzMzMzMxNQMzMzMzMzE1AmpmZmZkZUEDNzMzMzMxEQAAAAAAAAEVAZ2ZmZmZmQ0AzMzMzMzNQQAAAAAAAAEVAMzMzMzMzUEAzMzMzMzNDQAAAAAAAAE5AmZmZmZmZREAzMzMzMzNQQM3MzMzMzE5AAAAAAAAAUEAzMzMzMzNPQM3MzMzMzERAZmZmZmZmTkAAAAAAAIBQQGZmZmZmZk5AAAAAAAAATkDMzMzMzMxNQAAAAAAAAEVAmpmZmZmZQ0DNzMzMzMxCQAAAAAAAAFBAmpmZmZmZUEAAAAAAAIBQQGZmZmZmZk5AmpmZmZmZQkAzMzMzMzNOQMzMzMzMzE1AzczMzMxMUEDMzMzMzMxNQAAAAAAAAFBAAAAAAAAARUCamZmZmRlRQAAAAAAAAERAZ2ZmZmZmUEBmZmZmZmZCQM3MzMzMzFBAAAAAAAAAUUDNzMzMzMxQQGdmZmZmZkNAmpmZmZmZQkCamZmZmZlCQGZmZmZmZkRAmpmZmZmZQ0AzMzMzMzNDQJmZmZmZmU1AMzMzMzMzTUBmZmZmZmZEQM3MzMzMzEJAmpmZmZkZUECZmZmZmZlEQJqZmZmZGVBAzMzMzMzMTUAAAAAAAABOQM3MzMzMTFBAzMzMzMzMTUDNzMzMzMxEQDMzMzMzM05AmpmZmZmZQkDMzMzMzMxNQGZmZmZmZk1AmZmZmZmZREDNzMzMzMxCQJqZmZmZmUJAzczMzMxMUEAAAAAAAIBQQM3MzMzMTFBAMzMzMzMzTkBmZmZmZmZOQM3MzMzMzERAzczMzMzMREBmZmZmZmZOQAAAAAAAAENAMzMzMzMzQkCZmZmZmZlEQM3MzMzMTFBAAAAAAAAARUCZmZmZmZlEQGZmZmZmZk5AAAAAAAAARUAzMzMzMzNPQAAAAAAAAE5AMzMzMzMzUEAAAAAAAABFQJmZmZmZmURAAAAAAAAARUAAAAAAAABFQAAAAAAAAFBAZmZmZmZmTkAAAAAAAABOQJmZmZmZmURAAAAAAAAAREAAAAAAAABRQAAAAAAAAFFAAAAAAAAATkAzMzMzM7NQQGdmZmZm5lBA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         6,
         "values",
         "value"
        ]
       },
       {
        "data": "o/qd+xcbZUAGMCTzOnhkQK6AG4VSQWVAJkQBL936UUA6cRbWAEtSQPnrcLzTEmVA/bL0g6bBbEBAhAKIAV9IQC3cgYhr4kNA4ndQ5H90TUAOYjbmWDhPQOt+PKkb0kNANM1Wkg0FREADXrxPpJ1QQPyq3kI5CGxARyLtW4HBT0CXJYSt9qRMQFqHi3lBz1JAUDRP9n2VTkDqgGh9KitlQBQSAgKJj1NA8ipxquVqYUASbvBnXNNgQOvKNFVW3mNATLJIthNta0ACyICCxEBUQDAWJ5ONBVFAMFIFDvCeR0AqNstV4htoQI/WFFmrRFFAZRNH5q/DZ0B1C/ikYqdPQMDF4pdTxmFArhhF7rk7U0DqCNRDRjloQCa5AK3rBWVA0BjG6gDeZkBzyip/qaRlQLc+lqdge1RAGqj1cggnY0BBP7PqmBVpQA6yWRYybWJAdjh+GpnvZUBcxUgsUB9kQEBcjSm3j1JA6rSTUB1gUUAiQXIETsVMQNDso2eIdWdAIDNIg+KIb0CK5JIOqh5vQHL9RVqbr2NAi54ifSL+REDK0EVqRFNiQHcNw8JBBWRAZl3zYtQHbUDwUSnzZv5gQKHWQCQMfmZArTT+uLqFUUBiF1QYsYhtQMWw6QbyGUpAcmWJn0YpbkBuNpIxNDZEQK/N6Ok/3WlAFu9851rAakDWIVAISSVqQJWWA84MAlBA/weRU0WLRUBbfs4mpcJFQBDSClZ4D1JAAtMReihCUUAerVwihSJPQFEEPmXhwWNAYoKy3fwVY0DWtcZqaoBSQCzakJyurElAkEWVBPtYa0DjV5YCBcVSQO6dfYXv9GpAl61ii5cpZEBstnrWrbllQOL8pSM9dGxAgrgpmuDmZECJQVEh2SxUQLTcYXaZVGZAVoMcCmLRRkAwISJDd8lkQMjuVZTPRmNA0NDQd7wLU0BYhCdb5l5MQDtCf8ER+EVA8cYQGrZWbUC2ac4oU1huQEgJVn9sqG1AxVr066YLYkCG2R387bxiQE60ZR2vilBAuroCvGnUUEA2uhLM8JNiQITrnb/za0ZALLBOpj1LQkCusjd7C7lMQHjHu7tftmhAs3wWNBZOUUALY7VfNyNMQHk9UatlqWJAqF4wYfz+UUBkvksD/8xlQEuRAeH7g2FArrXVw5ktaEC69GKlCqJSQCOdcHgzH01AJonDeuGxUUDeSJye9tdSQFVOKL3pemdA8nR0DZFWY0CbtA7YQ71hQJdURy+g+E9A7AUltyh4SkAW2zPq2MxrQK4BAr80b2tAdClhYUumYUCIkYintZdpQFi7WMDglmpA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         7,
         "values",
         "value"
        ]
       },
       {
        "data": "AKlZnL86KkDTGGMFYcIpQAwVjXJcSSpASoDmnaSnJkC4oJFP4uQmQFo3T4ifKipAaH/M5u6KLkDh063P5n8hQEZPatEbIh5Apq62gesPJUBiMS/GzLgkQPisczGc/x9AMmC1Ri4eIEAORoc8ercmQJZG3L+oFC5AGKIlv/EWJkBK896+Xa8kQJGRJ0n4RydA6Pnr0e9xJEAAqVmcvzoqQCQak93C0ydAkL+c9UNDKUCuety9J8coQE3aRtxnVylAL3U8wh3KLUCgIyy5S1AoQDMsNQAyDSdAzWagEu8nIkBimwG1TcAtQMWkxi5jQCdAWfyrJuiOLUAqQK60fOgkQNDEYX8fjClA+Plh63CXJ0CzZ7/qj9AtQBfXHzEb4ytAMKS+K98JLUDxJaJXk0ksQADf0n6YeChADp4sr6SXKkDHcarMUEcuQBKVfjVPDSpAFm80Mx+6KkAE3ikB+IQpQBfD2h+AQihATBtqJsEuJkDzmbQ2xKEjQDFJBa1cYi1AvFY8+IecL0Ar+sLOWHEvQJ6UWlG++SpAfpwmIk2wIEANleb7jPkpQK7CZofEcilAaH/M5u6KLkA1UQH81uooQL7bHl9Y0CxA3QtCWXp0J0Dk/oDcQC8wQLaG4sCSciNA5Wrn32IKL0CtxNjsUzsgQL819FBVri5Aj1C7A3seL0CrX5QMedIuQKautoHrDyVA+KxzMZz/H0AyYLVGLh4gQA5Ghzx6tyZAGKIlv/EWJkBK896+Xa8kQJC/nPVDQylArnrcvSfHKEAzLDUAMg0nQM1moBLvJyJAYpsBtU3ALUDFpMYuY0AnQFn8qyboji1A0MRhfx+MKUAOniyvpJcqQMdxqsxQRy5AEpV+NU8NKkAXw9ofgEIoQJ6UWlG++SpAfpwmIk2wIEANleb7jPkpQDVRAfzW6ihA3QtCWXp0J0C2huLAknIjQK3E2OxTOyBAvzX0UFWuLkCPULsDex4vQKtflAx50i5A0xhjBWHCKUAMFY1yXEkqQEqA5p2kpyZAuKCRT+LkJkBaN0+InyoqQOHTrc/mfyFARk9q0RsiHkBiMS/GzLgkQJZG3L+oFC5AkZEnSfhHJ0Do+evR73EkQACpWZy/OipAJBqT3cLTJ0AfQBDRDmMsQE3aRtxnVylAL3U8wh3KLUCgIyy5S1AoQCpArrR86CRA+Plh63CXJ0AA39J+mHgoQIncab1zZS1AFm80Mx+6KkAE3ikB+IQpQEwbaibBLiZA85m0NsShI0C8Vjz4h5wvQCv6ws5YcS9ArsJmh8RyKUBof8zm7oouQOVq599iCi9A",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         8,
         "values",
         "value"
        ]
       },
       {
        "data": "tICId4OKqkDCt6pIKqqpQMMVDwVLpqpANCiEQDONpECmaCA1zeikQGbM3WP/a6pAtHOLIf0yskCBf7YCW9ubQG7s73x9upZAF0lFFi9MokDufwKGvNehQOaB2jUboJhAWKeOkWbfmEB6pn7lwKSkQHFWqRLAkrFA36/0hxO6o0Bg6vMJQ8uhQAqR5Ub4f6VANp5OlKl6oUC0gIh3g4qqQGPYMSHAW6ZAbHGJRInFqEDQLOmvBO6nQJgHoRI36ahAX7+pRn0xsUAqJjwBVSanQJZ7lHzaJaVA0KLkp8FYnUAuArAV5CSxQLFXggNFdKVAMTMPUyzmsEDSJlg6MheiQKoVGaqRR6lAo5rcYvT7pUBKze5tyjmxQBCNdYVH5q1ADw2/wddCsEAgeqN5C8iuQLCuvidTaadAzI2FCjI9q0B6ewPxdtaxQM7gc8vkNKpAShdje8yAq0CaFv53rjqpQHACCkaQD6dAYk1NOVHco0Ccwux8X3GgQLdJecmYrrBAiuhuNt3Es0Bea7BaRoKzQPqcagJv/6tARtzZiNwUmkDSrDKPBBCqQGAHsiYDGqlAtHOLIf0yskBpAEF9OyuoQOAMsfo2/a9Ad/KlwxnFpUCaX1yMfAC1QAs3e+DYNqBAvKh1EHHoskAMV7dNdxyZQHaZroBwZLJASBhCvu8Fs0B2nIUsqpeyQBdJRRYvTKJA5oHaNRugmEBYp46RZt+YQHqmfuXApKRA36/0hxO6o0Bg6vMJQ8uhQGxxiUSJxahA0CzprwTup0CWe5R82iWlQNCi5KfBWJ1ALgKwFeQksUCxV4IDRXSlQDEzD1Ms5rBAqhUZqpFHqUDMjYUKMj2rQHp7A/F21rFAzuBzy+Q0qkBwAgpGkA+nQPqcagJv/6tARtzZiNwUmkDSrDKPBBCqQGkAQX07K6hAd/KlwxnFpUALN3vg2DagQAxXt013HJlAdpmugHBkskBIGEK+7wWzQHachSyql7JAwreqSCqqqUDDFQ8FS6aqQDQohEAzjaRApmggNc3opEBmzN1j/2uqQIF/tgJb25tAbuzvfH26lkDufwKGvNehQHFWqRLAkrFACpHlRvh/pUA2nk6UqXqhQLSAiHeDiqpAY9gxIcBbpkDxFIyjaAGvQJgHoRI36ahAX7+pRn0xsUAqJjwBVSanQNImWDoyF6JAo5rcYvT7pUCwrr4nU2mnQKTEOzlssrBAShdje8yAq0CaFv53rjqpQGJNTTlR3KNAnMLsfF9xoECK6G423cSzQF5rsFpGgrNAYAeyJgMaqUC0c4sh/TKyQLyodRBx6LJA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         9,
         "values",
         "value"
        ]
       },
       {
        "data": "YAuVrcGFN0A6qaeD7L42QNAzjmpgnjdA1GdOrdQ2MkAC+UmcA4gyQEdglha2ajdAKs75QBwhQED4w5rkSbAoQGLhNCC9JCRAv73io3A3MEACJlADeaAvQBpoGuIf0yVAwv6eZDgLJkDKgA6OtEsyQLIx/T4xJj9A3o8y8Ld7MUADbh9zXIovQLdskFb9DTNAamWa6377LkBgC5WtwYU3QJtDlSnG0DNAl2I2Jkz0NUB+/+h7SjU1QMJG1CTrEzZA1r7IQct5PkARYVLFUIQ0QA3tKlUfvjJAkKPx2U8CKkAQUBJ+dmM+QOQI0rueAzNANKJnGEv0PUCmkt+LeggwQFCe0pKKZzZAsK3FkN97M0AxWW8qgog+QO5DKzS9fzpAlYYA28jSPEACiCbh00c7QIKXTGSwvzRA/0HH1R0kOEC0sUzoN54/QO1DBd/fOTdAZjSi+AdgOEDIb4OaHlw2QLxaqfQicDRAlELZrxCaMUBc7eLQQiUtQP6bgknIkT1AmwfihkeFQUAyAkVzQ0pBQJ5JaHVD0DhA1hhAP3wdJ0CrgB5MMRk3QGd5jHcqPzZAKs75QBwhQEDN8rYBi2s1QNoIib3VWTxA9iTJC0JLM0CooDVaAZ1CQOjR/5yFvSxAn4K9F+3BQECD5pUtV0EmQC3A79fvTEBAlWGaAxHcQEBWO24QVnpAQL+94qNwNzBAGmga4h/TJUDC/p5kOAsmQMqADo60SzJA3o8y8Ld7MUADbh9zXIovQJdiNiZM9DVAfv/oe0o1NUAN7SpVH74yQJCj8dlPAipAEFASfnZjPkDkCNK7ngMzQDSiZxhL9D1AUJ7SkopnNkD/QcfVHSQ4QLSxTOg3nj9A7UMF3985N0C8Wqn0InA0QJ5JaHVD0DhA1hhAP3wdJ0CrgB5MMRk3QM3ytgGLazVA9iTJC0JLM0Do0f+chb0sQIPmlS1XQSZALcDv1+9MQECVYZoDEdxAQFY7bhBWekBAOqmng+y+NkDQM45qYJ43QNRnTq3UNjJAAvlJnAOIMkBHYJYWtmo3QPjDmuRJsChAYuE0IL0kJEACJlADeaAvQLIx/T4xJj9At2yQVv0NM0BqZZrrfvsuQGALla3BhTdAm0OVKcbQM0B0CeXcqno7QMJG1CTrEzZA1r7IQct5PkARYVLFUIQ0QKaS34t6CDBAsK3FkN97M0CCl0xksL80QEj3a1+QmD1AZjSi+AdgOEDIb4OaHlw2QJRC2a8QmjFAXO3i0EIlLUCbB+KGR4VBQDICRXNDSkFAZ3mMdyo/NkAqzvlAHCFAQJ+CvRftwUBA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "line",
         "color",
         "value"
        ]
       }
      ],
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "dimensions": [
          {
           "label": "(L) Expand Amount",
           "name": "expand_capacity",
           "range": [
            10.071755415396812,
            37.226603771386465
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(L) Amortization",
           "name": "amortization_period",
           "range": [
            43,
            50
           ],
           "values": [
            48,
            50,
            50,
            50,
            50,
            50,
            43,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50
           ]
          },
          {
           "label": "(L) Debt Type",
           "name": "debt_type",
           "range": [
            -0.1,
            2.1
           ],
           "ticktext": [
            "",
            "GO Bond",
            "Rev Bond",
            "Paygo",
            ""
           ],
           "tickvals": [
            -0.1,
            0,
            1,
            2,
            2.1
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(L) Rate Lock",
           "name": "interest_rate_lock",
           "range": [
            -0.1,
            1.1
           ],
           "ticktext": [
            "",
            "False",
            "True",
            ""
           ],
           "tickvals": [
            -0.1,
            0,
            1,
            1.1
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Mean Net Benefits",
           "name": "Mean Net Benefits",
           "range": [
            4.332130278062011,
            91.65793645880686
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) 5%ile Net Benefits",
           "name": "5%ile Net Benefits",
           "range": [
            -203.46279755931454,
            -25.082870500358645
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) Possibility of<br>   Negative Net Benefits",
           "name": "Possibility of Negative Net Benefits",
           "range": [
            68.4,
            36.4
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) 95%ile Capacity<br>   Expansion Cost",
           "name": "95%ile Capacity Expansion Cost",
           "range": [
            252.27765049077516,
            36.587818897649726
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Expected Time<br>   Savings",
           "name": "Expected Time Savings",
           "range": [
            7.533309242356898,
            16.184583455555995
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           }
          },
          {
           "label": "(M) 99%ile Present Cost",
           "name": "99%ile Present Cost",
           "range": [
            1454.6225469101005,
            5376.486516736355
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             123
            ],
            "value": {}
           },
           "visible": false
          }
         ],
         "domain": {
          "y": [
           0,
           0.7
          ]
         },
         "labelangle": -90,
         "labelfont": {
          "color": "#AA0000"
         },
         "line": {
          "cmax": 37.226603771386465,
          "cmin": 10.071755415396812,
          "color": {
           "dtype": "float64",
           "shape": [
            123
           ],
           "value": {}
          },
          "colorbar": {
           "title": {
            "side": "right",
            "text": "expand_capacity"
           }
          },
          "colorscale": [
           [
            0,
            "#440154"
           ],
           [
            0.1111111111111111,
            "#482878"
           ],
           [
            0.2222222222222222,
            "#3e4989"
           ],
           [
            0.3333333333333333,
            "#31688e"
           ],
           [
            0.4444444444444444,
            "#26828e"
           ],
           [
            0.5555555555555556,
            "#1f9e89"
           ],
           [
            0.6666666666666666,
            "#35b779"
           ],
           [
            0.7777777777777778,
            "#6ece58"
           ],
           [
            0.8888888888888888,
            "#b5de2b"
           ],
           [
            1,
            "#fde725"
           ]
          ],
          "reversescale": true,
          "showscale": true
         },
         "type": "parcoords",
         "uid": "ecfe835b-0d19-45ec-b280-bc0f2b6d22ab"
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 2,
       "_last_trace_edit_id": 1,
       "_layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        }
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_update": {},
       "_view_count": 1
      }
     },
     "79978667b1e44298bf0da859634679cb": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "e0fa1541-9d23-4287-bb6d-8bd25d79584e",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900,
          10000,
          10276,
          10644,
          11012,
          11380,
          11748,
          12116,
          12484,
          12852,
          13220,
          13588,
          13956,
          14324,
          14692,
          15060,
          15428,
          15796,
          16164,
          16532,
          16900,
          17268,
          17636,
          18004,
          18372,
          18740,
          19108,
          19476,
          19844,
          20212,
          20580,
          20948,
          21316,
          21684,
          22052,
          22420,
          22788,
          23156,
          23524,
          23892,
          24260,
          24628,
          24996
         ],
         "y": [
          0,
          25,
          34,
          40,
          43,
          49,
          58,
          63,
          66,
          70,
          72,
          74,
          75,
          79,
          83,
          86,
          90,
          90,
          93,
          95,
          97,
          98,
          100,
          101,
          105,
          108,
          111,
          113,
          113,
          116,
          117,
          118,
          122,
          122,
          125,
          126,
          127,
          129,
          129,
          131,
          132,
          132,
          132,
          133,
          135,
          136,
          137,
          137,
          138,
          139,
          141,
          143,
          145,
          145,
          147,
          147,
          147,
          148,
          149,
          149,
          150,
          150,
          151,
          152,
          152,
          152,
          152,
          152,
          152,
          154,
          154,
          154,
          154,
          154,
          154,
          154,
          154,
          154,
          155,
          155,
          157,
          158,
          158,
          159,
          159,
          159,
          159,
          160,
          160,
          161,
          162,
          162,
          162,
          162,
          162,
          162,
          162,
          163,
          163,
          163,
          163,
          183,
          198,
          209,
          219,
          224,
          227,
          228,
          230,
          230,
          232,
          232,
          235,
          236,
          236,
          238,
          242,
          244,
          249,
          253,
          257,
          261,
          269,
          271,
          271,
          272,
          274,
          277,
          279,
          280,
          281,
          284,
          286,
          288,
          290,
          292,
          293,
          294,
          296,
          296,
          297,
          298
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "ε-Progress"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "79e1c9bfe0f14094aa3ad44d3e54526a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "7b3c6746e0c44bdba7a53f3cd9686886": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "7ce2da3018174ae5b18b8c4626a11d8d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "81c432cb8f4f4e218c7e467c0f47a327": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "81cea01d750448639a08e008a7eb9a28": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "flex_flow": "row wrap"
      }
     },
     "81e06a010ef14faba28bb9f98375d163": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Rate Lock",
       "description_tooltip": "interest_rate_lock",
       "disabled": false,
       "layout": "IPY_MODEL_fe6a8a763f924ebd9777d49c962b6f48",
       "name": "interest_rate_lock",
       "style": "IPY_MODEL_3fcd5ce57da443b8bc7160b62ff8e2f4",
       "value": true
      }
     },
     "82a3f24bfee241018f5899237dc46d31": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "83c1187930dc408087456687a3ccc89e": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "ce5651e8-4a13-4c68-a8e1-3d3314700230",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900,
          10000
         ],
         "y": [
          0,
          39,
          47,
          61,
          75,
          95,
          101,
          107,
          121,
          127,
          129,
          134,
          141,
          143,
          145,
          147,
          150,
          152,
          154,
          156,
          157,
          157,
          158,
          160,
          161,
          165,
          166,
          168,
          170,
          171,
          175,
          176,
          180,
          184,
          184,
          185,
          187,
          189,
          190,
          194,
          195,
          199,
          200,
          201,
          201,
          203,
          203,
          203,
          204,
          204,
          204,
          204,
          204,
          204,
          205,
          206,
          206,
          206,
          207,
          208,
          209,
          212,
          212,
          212,
          212,
          212,
          213,
          213,
          214,
          214,
          215,
          215,
          218,
          218,
          222,
          223,
          224,
          224,
          224,
          224,
          225,
          225,
          226,
          227,
          228,
          229,
          230,
          230,
          231,
          231,
          233,
          233,
          233,
          233,
          233,
          233,
          233,
          233,
          234,
          235,
          235
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "ε-Progress"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "84dbdb1068944da9b110343343073cbe": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "859a356d19324bb0a8470b7636d5b48c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "86d240810f104776b474ed85d05b5d5e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "8770e2700d764e2ba049b3bb68d8d00d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "width": "100%"
      }
     },
     "89c24bf3f2e54c6f84ea057811468c9b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "89c6c02cbe6649ad82bab0903c3fc3f3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "8c93617032ad46e19a4d5620fb03107e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) alpha",
       "description_tooltip": "alpha",
       "disabled": false,
       "layout": "IPY_MODEL_49b49d1ad8b14a38ac6692469d86da92",
       "name": "alpha",
       "style": "IPY_MODEL_9b90f455fa5b480d95bb61066c494288",
       "value": true
      }
     },
     "8f582716bad54c0bb092ab339b83cb86": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) Input Flow",
       "description_tooltip": "input_flow",
       "disabled": false,
       "layout": "IPY_MODEL_7550410d729d43d1bfd00fc7a9c7c485",
       "name": "input_flow",
       "style": "IPY_MODEL_84dbdb1068944da9b110343343073cbe",
       "value": true
      }
     },
     "9402a3ae471f4fda980abbeed07f59d9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "9863abac8fae4d3fb6d03d325ca90543": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "99bb074f356e4639b000399763aa8cca": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_fd8d272ebf0c435e96c23f4930f6c71a"
      }
     },
     "9a99e4bda3c04e7d9f7c156d942a8b52": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Expected Time Savings",
       "description_tooltip": "Expected Time Savings",
       "disabled": false,
       "layout": "IPY_MODEL_519e38fe80d34b2884f9cae31473fba0",
       "name": "Expected Time Savings",
       "style": "IPY_MODEL_e522ca9a82cc4eb7840b4b6bc41b49a9",
       "value": true
      }
     },
     "9aad9e3663724276bcd6fc4e63742086": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) 95%ile Capacity Expansion Cost",
       "description_tooltip": "95%ile Capacity Expansion Cost",
       "disabled": false,
       "layout": "IPY_MODEL_1888024f36cb40e9bc25a5341dceb3b4",
       "name": "95%ile Capacity Expansion Cost",
       "style": "IPY_MODEL_14f1cd3191784d91a1b64d71b8c01581",
       "value": true
      }
     },
     "9b2b1ae924f5483098bb6269279ecf1c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Expand Amount",
       "description_tooltip": "expand_capacity",
       "disabled": false,
       "layout": "IPY_MODEL_bc9a3cb4e4c84451840353a2aaf47b7c",
       "name": "expand_capacity",
       "style": "IPY_MODEL_47f7ddc9729a4d4d96d9bb214677db4b",
       "value": true
      }
     },
     "9b90f455fa5b480d95bb61066c494288": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "9c9040a6622940248014d1784c333f6c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "9dfe0e48535641abb5eab3f370e1bc90": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "a10c06ecac874575a929359a25f3f6d6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "width": "100%"
      }
     },
     "a2cd206ecb1d46e3ab2f402cd201eaa3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "a3238d02d7f345a4b90eaffbb26fb625": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) 95%ile Capacity Expansion Cost",
       "description_tooltip": "95%ile Capacity Expansion Cost",
       "disabled": false,
       "layout": "IPY_MODEL_340ba2ebcf304508a3244973c2951eb7",
       "name": "95%ile Capacity Expansion Cost",
       "style": "IPY_MODEL_86d240810f104776b474ed85d05b5d5e",
       "value": true
      }
     },
     "a4e06beb7bea40edb50386c0d903b5e3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "a5bbdc2aef65426c8e80860b2d9f2cf0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "align_items": "center"
      }
     },
     "a62f6028f8ba483a92fc2c2c8cd3b352": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) Interest Rate",
       "description_tooltip": "interest_rate",
       "disabled": false,
       "layout": "IPY_MODEL_244b12d8c7754a90a7514918145b1d11",
       "name": "interest_rate",
       "style": "IPY_MODEL_9dfe0e48535641abb5eab3f370e1bc90",
       "value": true
      }
     },
     "a727ecc4e9b443b2a9ec0045441d1602": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "a8b46a0645944facba5b1100a2faff1d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) Cost of Expand",
       "description_tooltip": "cost_of_capacity_expansion",
       "disabled": false,
       "layout": "IPY_MODEL_c04a0f6629b542faa38e253ce972b0cf",
       "name": "cost_of_capacity_expansion",
       "style": "IPY_MODEL_d98ee6cd5b43406388f8eecde812bee6",
       "value": true
      }
     },
     "a99e41749a864d0b956dc018c886ba18": {
      "buffers": [
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         0,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         2,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         3,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         4,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         5,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         6,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         7,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         8,
         "values",
         "value"
        ]
       },
       {
        "data": "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",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "line",
         "color",
         "value"
        ]
       }
      ],
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "dimensions": [
          {
           "label": "(L) Expand Amount",
           "name": "expand_capacity",
           "range": [
            0,
            100
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(L) Amortization",
           "name": "amortization_period",
           "range": [
            23,
            50
           ],
           "values": [
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            23,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50
           ]
          },
          {
           "label": "(L) Debt Type",
           "name": "debt_type",
           "range": [
            -0.1,
            2.1
           ],
           "ticktext": [
            "",
            "GO Bond",
            "Rev Bond",
            "Paygo",
            ""
           ],
           "tickvals": [
            -0.1,
            0,
            1,
            2,
            2.1
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(L) Rate Lock",
           "name": "interest_rate_lock",
           "range": [
            -0.1,
            1.1
           ],
           "ticktext": [
            "",
            "False",
            "True",
            ""
           ],
           "tickvals": [
            -0.1,
            0,
            1,
            1.1
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Mean Net Benefits",
           "name": "Mean Net Benefits",
           "range": [
            -69.8851564951961,
            83.01952182149846
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) 5%ile Net Benefits",
           "name": "5%ile Net Benefits",
           "range": [
            -322.31870291728876,
            0
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) Possibility of<br>   Negative Net Benefits",
           "name": "Possibility of Negative Net Benefits",
           "range": [
            73.2,
            0
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) 95%ile Capacity<br>   Expansion Cost",
           "name": "95%ile Capacity Expansion Cost",
           "range": [
            402.7504028254715,
            0
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Expected Time<br>   Savings",
           "name": "Expected Time Savings",
           "range": [
            0,
            20.305734401294245
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             327
            ],
            "value": {}
           }
          }
         ],
         "domain": {
          "y": [
           0,
           0.7
          ]
         },
         "labelangle": -90,
         "labelfont": {
          "color": "#AA0000"
         },
         "line": {
          "cmax": 100,
          "cmin": 0,
          "color": {
           "dtype": "float64",
           "shape": [
            327
           ],
           "value": {}
          },
          "colorbar": {
           "title": {
            "side": "right",
            "text": "expand_capacity"
           }
          },
          "colorscale": [
           [
            0,
            "#440154"
           ],
           [
            0.1111111111111111,
            "#482878"
           ],
           [
            0.2222222222222222,
            "#3e4989"
           ],
           [
            0.3333333333333333,
            "#31688e"
           ],
           [
            0.4444444444444444,
            "#26828e"
           ],
           [
            0.5555555555555556,
            "#1f9e89"
           ],
           [
            0.6666666666666666,
            "#35b779"
           ],
           [
            0.7777777777777778,
            "#6ece58"
           ],
           [
            0.8888888888888888,
            "#b5de2b"
           ],
           [
            1,
            "#fde725"
           ]
          ],
          "reversescale": true,
          "showscale": true
         },
         "type": "parcoords",
         "uid": "84bb6258-85cc-402a-981f-9859f412bfb7"
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 1,
       "_layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        }
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_py2js_update": {},
       "_view_count": 1
      }
     },
     "a9d62fce8dfe4e3fb4417dfa8f78d297": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) 5%ile Net Benefits",
       "description_tooltip": "5%ile Net Benefits",
       "disabled": false,
       "layout": "IPY_MODEL_f1c8470ae48d4b9bb520d4767ca56fc2",
       "name": "5%ile Net Benefits",
       "style": "IPY_MODEL_2437ffe81d9b4eb1967df0a3fc1ae1c0",
       "value": true
      }
     },
     "aaff845a6b584d14b0eeca31aad9b335": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Expand Amount",
       "description_tooltip": "expand_capacity",
       "disabled": false,
       "layout": "IPY_MODEL_b1229c2a314641a2b8080552b65446c6",
       "name": "expand_capacity",
       "style": "IPY_MODEL_2e97d66c474d41a389704b0c8c75289d",
       "value": true
      }
     },
     "adef953ca5944568a1c32bb87e8c95d9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "align_items": "center"
      }
     },
     "afc0cb933237431da56a06953f749f5b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "afea89d49630498ba5b6bcdaebb7d76f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_13d69ba13d92491092e07cc24bbae9a7",
        "IPY_MODEL_6e9d053133d24bb4a27c350806756977"
       ],
       "layout": "IPY_MODEL_758330ecb8c64d388173636e86524af8"
      }
     },
     "b00139a181d84caf95c1eba470be55f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Mean Net Benefits",
       "description_tooltip": "Mean Net Benefits",
       "disabled": false,
       "layout": "IPY_MODEL_cc4e706147414b7c8f39231c8be47ca5",
       "name": "Mean Net Benefits",
       "style": "IPY_MODEL_ce38549c456c48a4bd5d9c8546230ae6",
       "value": true
      }
     },
     "b1229c2a314641a2b8080552b65446c6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "b1e9f562c0404c86b04dc5cccc6b132a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        "< None >",
        "alpha",
        "beta",
        "input_flow",
        "value_of_time",
        "unit_cost_expansion",
        "interest_rate",
        "yield_curve",
        "build_travel_time",
        "time_savings",
        "value_of_time_savings",
        "net_benefits",
        "cost_of_capacity_expansion",
        "free_flow_time",
        "initial_capacity"
       ],
       "description": "Colorize:",
       "index": 1,
       "layout": "IPY_MODEL_27ecdbc153764aada7b87bdf0f5704fe",
       "style": "IPY_MODEL_f6f8444f538947279034417774a0161d"
      }
     },
     "b1eeca6e1ede4bcdaf6772fcf5a13e4e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Amortization",
       "description_tooltip": "amortization_period",
       "disabled": false,
       "layout": "IPY_MODEL_e39b2bfa49344f0d8332ee8eb2471616",
       "name": "amortization_period",
       "style": "IPY_MODEL_b9d280a1840145b3a5a7c5b623958013",
       "value": true
      }
     },
     "b51b5087e6bf4537972e640cca0fceb5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "b6747f0c6f25446bba6dc3638e04b258": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "align_items": "center"
      }
     },
     "b6a50e6f8c6b419e9f7e45e814dec003": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Value Time Save",
       "description_tooltip": "value_of_time_savings",
       "disabled": false,
       "layout": "IPY_MODEL_9c9040a6622940248014d1784c333f6c",
       "name": "value_of_time_savings",
       "style": "IPY_MODEL_bd2ced3dd5244d6ea7739f132a35d904",
       "value": true
      }
     },
     "b8405f7e3c7c47518210647f4f54864e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "b9c3217164784e52981a57c62c93230d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(L) Expand Amount",
       "description_tooltip": "expand_capacity",
       "disabled": false,
       "layout": "IPY_MODEL_1d2af0979bea4a1fbc1b2302cf6f6a03",
       "name": "expand_capacity",
       "style": "IPY_MODEL_0b81840a3a1a43cdad9178fe4f5aad34",
       "value": true
      }
     },
     "b9d280a1840145b3a5a7c5b623958013": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "ba2f2dea894843bbaa75ac2c2dadc83b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) Build Time",
       "description_tooltip": "build_travel_time",
       "disabled": false,
       "layout": "IPY_MODEL_c4debd92deeb492ca9e4291744a3ba49",
       "name": "build_travel_time",
       "style": "IPY_MODEL_3e0e28bbc82545d79508db376782e737",
       "value": true
      }
     },
     "bb7d620c17514f0587da238c925f0245": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "bbaa7eb2087a485baac81bec287e21c2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "width": "100%"
      }
     },
     "bc9a3cb4e4c84451840353a2aaf47b7c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "bcd6632e225e4cec86444a471096f7f1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Time Savings",
       "description_tooltip": "time_savings",
       "disabled": false,
       "layout": "IPY_MODEL_657b251530914e08a8f0504f9de9b819",
       "name": "time_savings",
       "style": "IPY_MODEL_5810c1cfdefa4c99885ed889dfc582f4",
       "value": true
      }
     },
     "bd2ced3dd5244d6ea7739f132a35d904": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "be0294becd09466ab0a3df4e65423e99": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_a99e41749a864d0b956dc018c886ba18",
        "IPY_MODEL_70324cb49ccd42208ca33747b9fd92e9",
        "IPY_MODEL_3017f01c64514208a9f1f83fabd144ed",
        "IPY_MODEL_5e0cd45571f7431883eeb6881c3407c6"
       ],
       "layout": "IPY_MODEL_a5bbdc2aef65426c8e80860b2d9f2cf0"
      }
     },
     "beb957c41baf4360b6fa3b286cdefb97": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M) 99%ile Present Cost",
       "description_tooltip": "99%ile Present Cost",
       "disabled": false,
       "layout": "IPY_MODEL_82a3f24bfee241018f5899237dc46d31",
       "name": "99%ile Present Cost",
       "style": "IPY_MODEL_219972e36d644c659383c19dd08b5c27",
       "value": false
      }
     },
     "bf5f9781d75d4429ac96412962cd0c69": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "c04a0f6629b542faa38e253ce972b0cf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "c4debd92deeb492ca9e4291744a3ba49": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "c581f3d97330434ca25c19373f03b242": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "8f12101a-fa88-40a1-907c-cf81a22b915d",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900
         ],
         "y": [
          0,
          20,
          26,
          23,
          24,
          25,
          26,
          27,
          28,
          28,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          28,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          30,
          30,
          30,
          30,
          30,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31,
          31
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Number of Solutions"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "c6bc35ee55134dfcb2fab889f006721c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "AccordionModel",
      "state": {
       "_titles": {
        "0": "Axes"
       },
       "children": [
        "IPY_MODEL_e52a17bca96d451199372c7066788fed"
       ],
       "layout": "IPY_MODEL_5b544a8af4664a7ea6fdbd48b02171b4",
       "selected_index": null
      }
     },
     "c8ccb59c17754d638dc1ceffa15d91e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(X) Yield Curve",
       "description_tooltip": "yield_curve",
       "disabled": false,
       "layout": "IPY_MODEL_026fca5a3d04467bbccd302e1d671b53",
       "name": "yield_curve",
       "style": "IPY_MODEL_373f04dbc8424f4cb32c0aeed5f66748",
       "value": true
      }
     },
     "cc4e706147414b7c8f39231c8be47ca5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "ce38549c456c48a4bd5d9c8546230ae6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "cee5bac97eee42429387f61a02a764de": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "d0ccd24b4c6443d59e172aef9c16c181": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "d294bfa87173409eb1e98922c3261a11": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "b9032888-e489-444b-bc2f-2828c3eef392",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900,
          10000
         ],
         "y": [
          0,
          8,
          16,
          20,
          29,
          33,
          38,
          41,
          42,
          43,
          43,
          47,
          49,
          50,
          52,
          53,
          55,
          55,
          57,
          59,
          60,
          60,
          61,
          61,
          62,
          54,
          52,
          52,
          54,
          54,
          53,
          52,
          53,
          53,
          53,
          53,
          54,
          54,
          54,
          55,
          55,
          55,
          55,
          56,
          56,
          56,
          56,
          57,
          57,
          58,
          58,
          59,
          59,
          59,
          59,
          59,
          59,
          60,
          60,
          60,
          60,
          60,
          60,
          60,
          60,
          61,
          61,
          61,
          61,
          62,
          62,
          62,
          62,
          62,
          62,
          62,
          62,
          64,
          65,
          65,
          65,
          65,
          65,
          65,
          65,
          66,
          66,
          66,
          67,
          67,
          67,
          69,
          69,
          70,
          70,
          70,
          70,
          69,
          67,
          67,
          68
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "Number of Solutions"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "d98ee6cd5b43406388f8eecde812bee6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "d9aa974396c04e02b03e5ef4f2008397": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "da8cec26a26e44abbd0f50c848c52ea5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "db2d7c388f52427fa06d1be0aed87768": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "dc76ce7a7e4e4632a9a8f3a14d598b65": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "dcd07ea24f9b4916a414517e8aaf6fbd": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "dd124b4e9b1042029a0ed62e6a5233ce": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "63e4c81a-9604-4ba0-b94f-c7ebf6d4f816",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900
         ],
         "y": [
          0,
          34,
          47,
          58,
          62,
          66,
          67,
          70,
          73,
          73,
          75,
          76,
          77,
          77,
          77,
          78,
          78,
          78,
          78,
          78,
          78,
          78,
          78,
          78,
          78,
          79,
          79,
          80,
          80,
          80,
          81,
          83,
          83,
          83,
          83,
          83,
          83,
          84,
          84,
          85,
          85,
          85,
          85,
          85,
          86,
          86,
          86,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87,
          87
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "ε-Progress"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "de8be3fc5e2a4c7ea102ce38a8512a38": {
      "buffers": [
       {
        "data": "4yOWaMQ2VkDrEyZedkkgQGL5ZCGMuApAGQ+Fuyo8K0DAUGEWpRJCQIUAmW+JvFhAAAAAAAAAAAAAAAAAAABZQHSjExWqKEpAleIpCDjdSUBs76EY3T45QOPXmS6UTEJAXVj3gA/NU0BO8xX1YwFRQHzzdjt7N1FA58CJH8wrLEC+WHR50Ro0QKjI5sIFGD1A3TzPEKtILEC0sMqjaYLyP+y/k/FtVEpAQdoLy5yYMUBbdfJ0vfs5QMYplple6SVAmqOQ8FjCFUDq4u7esFBOQDUL20rn7BVAy2VL0GhdPkAncE5G7Mk1QE18RfF+diNA8X/pMfY9Q0CoNOOKsVdPQLyRk/7B3QNA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         0,
         "values",
         "value"
        ]
       },
       {
        "data": "ylAFqJMwAEDXFA2hnGMAQFQk8oVVxf8/bHEPhEEPAECn/RvPpQ0AQONSCeEvQQBAmsl2f4RbAED+viZ/WFkAQKDA+7JmSgBA6YXBtmIdAEA5HtgXtDMAQCAcvLQUN/8/+Qd0yQV//z/LigWBTAUAQNe06AYir/8/fJ8cVDeA/z8pUvnWprT/P3hpADlwOQBAFhnv59Or/z8axIjbR0EAQKKCZfZzLABAPwL3wqZ2/z93zt7pfzIAQF7ryumEDABAkgDsVMs7AEChzi+ylbz/Pz3eY8Ykz/8/3x2yUkEdAECfI5ejfH7/P9SypAt1zf8/cdLgbdsxAEDodt3QWyAAQFInqUuKTwBA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         2,
         "values",
         "value"
        ]
       },
       {
        "data": "vURhB7MQ7z+FgYsrJZ/wP9D5ERmYyu4/YUJ61LG38D+1FwH6SU7wP3EGnhBQP/A/1KgCn7txgj+FerZsubLwP4DDr8Ih+JW/WGp4tCnhcz9j3WQlmt7vP08gXWza3O4/nqx0pq1w7z/JzjxYKy7vP6oHK8onve8/hzi8NWbP7z90NS0kOhecP71gx1c0R/A/xEKnKHw38D9iYKoofu+lP1DQl7thou8/1I/nj1VK8D9OCcpHxlDvP6s/QGeFyfA/GD+NE2REkj9hLa4c4Q/wP9M2+4txNPA/3EjBDdXynz96FSWnlqyRv29jRTQsnqi/lsk+eq1u7z+JNclLnX/vP3gfBm2W7+8/",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         3,
         "values",
         "value"
        ]
       },
       {
        "data": "/glTHI9aTkBFq2CAIqVQQKPA034Q+VBAp6+9YKdZUEBaNwCHTU9PQBJuKcOJSU5AAAAAAABAUUD//////0dOQMsURLUE1k5A2SoMCF3ZTkCSWqhjK9RPQCrQgoDhSk9AP0D6trNvTkDmhIV3ipBOQIYpQDqrjU5ArrItPARUUEDXrbtVzxRQQKVoIcTKnk9Ag8EmW1hTUEDzcDWMGSZRQKovX4Ib1E5AiwSfWTItUEAen7hnTMlPQJplBbQIfFBAL23IDQXSUEBXDci7Ca1OQHWSpSZJ0VBABi/4s9mOT0DJ/V+A0AVQQO9AqghIjVBANO1B/jg5T0D+a9TbdaROQNw+sQ4rClFA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         4,
         "values",
         "value"
        ]
       },
       {
        "data": "CNizjsOVIEBgl+rzr1sDQEDXD0vgu/E/IAtK6BPLDEAwRf7Hk4UZQLhHWvPY2SBAAAAAAAAAAAAEAAAAAOAgQKhZ31XaTx1AOKmevxc1HUBwK73ipF4VQLB+6fvzqBlABP8WJDFBIEDQ2NNDrHsfQNCz/i2mkh9AQKpJenh/DUCQIkWkCrMSQNi69N6pCRdAoM8nm/SUDUAADY/Kc+bZP7CCBu0jXx1AULcPZtosEUAQBzvCnLUVQMBMU3/pfghAQLTkjbx++z9Ilb8hspceQMBim1a2rfs/0Ic+YDKJF0BwIwD696ITQCDit+r+VgZAYJbwDTg2GkAQoFwhUdweQACSYKd46uo/",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         5,
         "values",
         "value"
        ]
       },
       {
        "data": "DzWRq84YT0Dq7av09CUyQMzZXkYioCBAbWrFqWL+OkDdYH6LOu1HQHhGSch2mE9AAAAAAAAAAAAIAAAAAKRPQA1kgbDcektApL6kQ8ZhS0C5WJGUughEQMXmKrxkDkhAJx6rIzx6TkBDm5Z/8YNNQJLIHst7mU1AnA+l8oCnO0Bn0AD62YdBQCtvBUEPmUVAplJ1UaW7O0AwHOaNDEgIQIUaNq4xiUtA27uuvwwaQECfVhf2QlpEQPQXXuf69jZA+2gGxdDGKUDzm6P/Nq5MQJSsMfHa8ilAU586Op8QRkA5IWB6yGhCQP5jDPyO8TRA+owRjdSSSEAP1kYPjO5MQN+I6hzROxlA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         6,
         "values",
         "value"
        ]
       },
       {
        "data": "LO5y2AuQZMAoqzYDGAYFwECF/F0aucq/PEsAG0P+HsDTYiMbmy5GwE/lY0Lmp2fAAAAAAAAAAAC/K+rqEvtnwNSoyysUoVPAfP7SrGFNU8CqF9aOElc4wLvRpxY/oUbAkvueXbijYcBqPf1ct6BcwAl7R2XyH13AcAP800GQIMAEFE5qPDswwNIwR/vRBz/AkANlZqGxIMAALchc0HG1PxAHBLu90VPAVB4sQ8tgKcDKAmXf4ZU5wOxnSZAl8hPAEEABl8Wu77+0xkaptlRYwFhCTkpbKfC/h4QtVWyrQMBwOxEOPcUywMhWrsBcEg/A1CnLrKSESMA8ooALC4RZwABgru37wpu/",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         7,
         "values",
         "value"
        ]
       },
       {
        "data": "cDtXgz9WbEBPwxL1t8Y0QOHL1q8GCyFAnr5CuPleQUDY4VDT6g1XQO02dvQDjm9AAAAAAAAAAADBK+rqEuRvQG0tBkJBr2BA565SZyJ/YEBHMv7tIRpQQEBcaenRV1dAHMOJZkdCaUCGRWQOWLFlQKlvayVY9mVAqohR7tD3QUBp2icveKVJQMqDVB98jlJAN+pTAjsKQkDI2v8KfpwHQCmKD0kry2BAcMN5kD9yRkAC7OTymZJQQO9xcEuE8ztA/Hx2Hr3BK0BXSowU6VVjQN90e1oG+CtA7RG0xwVeU0DxvmgBZ8tLQNcuIpTa0zhAZ1vunLyLWECiBpKJqP1jQD832BiUVxlA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "dimensions",
         8,
         "values",
         "value"
        ]
       },
       {
        "data": "4yOWaMQ2VkDrEyZedkkgQGL5ZCGMuApAGQ+Fuyo8K0DAUGEWpRJCQIUAmW+JvFhAAAAAAAAAAAAAAAAAAABZQHSjExWqKEpAleIpCDjdSUBs76EY3T45QOPXmS6UTEJAXVj3gA/NU0BO8xX1YwFRQHzzdjt7N1FA58CJH8wrLEC+WHR50Ro0QKjI5sIFGD1A3TzPEKtILEC0sMqjaYLyP+y/k/FtVEpAQdoLy5yYMUBbdfJ0vfs5QMYplple6SVAmqOQ8FjCFUDq4u7esFBOQDUL20rn7BVAy2VL0GhdPkAncE5G7Mk1QE18RfF+diNA8X/pMfY9Q0CoNOOKsVdPQLyRk/7B3QNA",
        "encoding": "base64",
        "path": [
         "_data",
         0,
         "line",
         "color",
         "value"
        ]
       }
      ],
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "dimensions": [
          {
           "label": "(L) Expand Amount",
           "name": "expand_capacity",
           "range": [
            0,
            100
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(L) Amortization",
           "name": "amortization_period",
           "range": [
            48,
            50
           ],
           "values": [
            50,
            50,
            50,
            50,
            50,
            50,
            48,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50
           ]
          },
          {
           "label": "(L) Debt Type",
           "name": "debt_type",
           "range": [
            -0.1,
            2.1
           ],
           "ticktext": [
            "",
            "GO Bond",
            "Rev Bond",
            "Paygo",
            ""
           ],
           "tickvals": [
            -0.1,
            0,
            1,
            2,
            2.1
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(L) Rate Lock",
           "name": "interest_rate_lock",
           "range": [
            -0.1,
            1.1
           ],
           "ticktext": [
            "",
            "False",
            "True",
            ""
           ],
           "tickvals": [
            -0.1,
            0,
            1,
            1.1
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) Build Time",
           "name": "build_travel_time",
           "range": [
            69,
            60.56249999999999
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Time Savings",
           "name": "time_savings",
           "range": [
            0,
            8.437500000000007
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Value Time Save",
           "name": "value_of_time_savings",
           "range": [
            0,
            63.28125000000006
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(M+) Net Benefits",
           "name": "net_benefits",
           "range": [
            -191.84605928169728,
            0.08376791253265381
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          },
          {
           "label": "(M-) Cost of Expand",
           "name": "cost_of_capacity_expansion",
           "range": [
            255.12730928169734,
            0
           ],
           "values": {
            "dtype": "float64",
            "shape": [
             33
            ],
            "value": {}
           }
          }
         ],
         "domain": {
          "y": [
           0,
           0.7
          ]
         },
         "labelangle": -90,
         "labelfont": {
          "color": "#AA0000"
         },
         "line": {
          "cmax": 100,
          "cmin": 0,
          "color": {
           "dtype": "float64",
           "shape": [
            33
           ],
           "value": {}
          },
          "colorbar": {
           "title": {
            "side": "right",
            "text": "expand_capacity"
           }
          },
          "colorscale": [
           [
            0,
            "#440154"
           ],
           [
            0.1111111111111111,
            "#482878"
           ],
           [
            0.2222222222222222,
            "#3e4989"
           ],
           [
            0.3333333333333333,
            "#31688e"
           ],
           [
            0.4444444444444444,
            "#26828e"
           ],
           [
            0.5555555555555556,
            "#1f9e89"
           ],
           [
            0.6666666666666666,
            "#35b779"
           ],
           [
            0.7777777777777778,
            "#6ece58"
           ],
           [
            0.8888888888888888,
            "#b5de2b"
           ],
           [
            1,
            "#fde725"
           ]
          ],
          "reversescale": true,
          "showscale": true
         },
         "type": "parcoords",
         "uid": "ab4a2c67-e948-4199-8833-493f145fd1d1"
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 1,
       "_layout": {
        "autosize": true,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        }
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_py2js_update": {},
       "_view_count": 1
      }
     },
     "df879a1b46e441feb1c6b61d8e810c3c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_83c1187930dc408087456687a3ccc89e",
        "IPY_MODEL_58e13c7e778943638d94891e098ede6a"
       ],
       "layout": "IPY_MODEL_3169c455cec2494887827bbf605c6c3c"
      }
     },
     "dfe91ff3b264484db64e8da4ee1383f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "e2930abc51de414d926bb7051cb54411": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Net Benefits",
       "description_tooltip": "net_benefits",
       "disabled": false,
       "layout": "IPY_MODEL_81c432cb8f4f4e218c7e467c0f47a327",
       "name": "net_benefits",
       "style": "IPY_MODEL_27792d61c5024604b9a8a1070ed9273e",
       "value": true
      }
     },
     "e39b2bfa49344f0d8332ee8eb2471616": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "e408b6be38be46b3bc84ff176d2a9ce4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_236d0426ca12481f93dc72ecb001a11c",
        "IPY_MODEL_47091937803741e1bd6206b950f8cfe1"
       ],
       "layout": "IPY_MODEL_d9aa974396c04e02b03e5ef4f2008397"
      }
     },
     "e44af3355557463ca4ee8a3ec4e63ab3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "e522ca9a82cc4eb7840b4b6bc41b49a9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "e52a17bca96d451199372c7066788fed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "BoxModel",
      "state": {
       "children": [
        "IPY_MODEL_aaff845a6b584d14b0eeca31aad9b335",
        "IPY_MODEL_06a685d0b5ad4f41932d92f57e578675",
        "IPY_MODEL_65d78072b6574fff91fd74546867cdfa",
        "IPY_MODEL_326c0938d3ad4951ba6822778f6ad096",
        "IPY_MODEL_b00139a181d84caf95c1eba470be55f8",
        "IPY_MODEL_a9d62fce8dfe4e3fb4417dfa8f78d297",
        "IPY_MODEL_f937cecc02a04311b18d0ea51d34da1a",
        "IPY_MODEL_a3238d02d7f345a4b90eaffbb26fb625",
        "IPY_MODEL_1b93c9328adf4e4b88d93804b8c24892",
        "IPY_MODEL_beb957c41baf4360b6fa3b286cdefb97"
       ],
       "layout": "IPY_MODEL_2b0b770b83e04939916799578f0ab7e6"
      }
     },
     "e694b90bfc3d469db7794011c889c885": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "e83a0a7fab9c4391a08caaf3adb2221c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_dd124b4e9b1042029a0ed62e6a5233ce",
        "IPY_MODEL_c581f3d97330434ca25c19373f03b242"
       ],
       "layout": "IPY_MODEL_6b96717b27b44e4f98b4119f7056a450"
      }
     },
     "eabdbf080850494883f9f24b41477092": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "eb19a60c356741ec8bf84b81a0c913e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) Mean Net Benefits",
       "description_tooltip": "Mean Net Benefits",
       "disabled": false,
       "layout": "IPY_MODEL_e694b90bfc3d469db7794011c889c885",
       "name": "Mean Net Benefits",
       "style": "IPY_MODEL_54a485d281b34f8da4ffd4353cff5c9e",
       "value": true
      }
     },
     "eb9da36caabd4f50acf0e4fcf39cfbf0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M+) 5%ile Net Benefits",
       "description_tooltip": "5%ile Net Benefits",
       "disabled": false,
       "layout": "IPY_MODEL_a4e06beb7bea40edb50386c0d903b5e3",
       "name": "5%ile Net Benefits",
       "style": "IPY_MODEL_11b489d3cf32473190dc7bafaa792220",
       "value": true
      }
     },
     "ed86ee2ca602462eb43f88a1884188b8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DropdownModel",
      "state": {
       "_options_labels": [
        "< None >",
        "expand_capacity",
        "amortization_period",
        "debt_type",
        "interest_rate_lock",
        "Mean Net Benefits",
        "5%ile Net Benefits",
        "Possibility of Negative Net Benefits",
        "95%ile Capacity Expansion Cost",
        "Expected Time Savings"
       ],
       "description": "Colorize:",
       "index": 1,
       "layout": "IPY_MODEL_5d867cf9e18946f2a83e03a6d3ec7199",
       "style": "IPY_MODEL_fa3f824a45ba4b04ad87660095ffad34"
      }
     },
     "f1c8470ae48d4b9bb520d4767ca56fc2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "f5ef9a85785a4169ae56cca6a8ffb7a3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "width": "250px"
      }
     },
     "f6f8444f538947279034417774a0161d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "f74cfb5abc0242dab34ac80a6fc4c9c6": {
      "model_module": "plotlywidget",
      "model_module_version": "^4.14.3",
      "model_name": "FigureModel",
      "state": {
       "_config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "_data": [
        {
         "fill": "tonexty",
         "line": {
          "shape": "linear"
         },
         "mode": "lines+markers",
         "name": "",
         "type": "scatter",
         "uid": "46d3bca8-7b6e-49de-b9cc-fb98e4e70d51",
         "x": [
          0,
          100,
          200,
          300,
          400,
          500,
          600,
          700,
          800,
          900,
          1000,
          1100,
          1200,
          1300,
          1400,
          1500,
          1600,
          1700,
          1800,
          1900,
          2000,
          2100,
          2200,
          2300,
          2400,
          2500,
          2600,
          2700,
          2800,
          2900,
          3000,
          3100,
          3200,
          3300,
          3400,
          3500,
          3600,
          3700,
          3800,
          3900,
          4000,
          4100,
          4200,
          4300,
          4400,
          4500,
          4600,
          4700,
          4800,
          4900,
          5000,
          5100,
          5200,
          5300,
          5400,
          5500,
          5600,
          5700,
          5800,
          5900,
          6000,
          6100,
          6200,
          6300,
          6400,
          6500,
          6600,
          6700,
          6800,
          6900,
          7000,
          7100,
          7200,
          7300,
          7400,
          7500,
          7600,
          7700,
          7800,
          7900,
          8000,
          8100,
          8200,
          8300,
          8400,
          8500,
          8600,
          8700,
          8800,
          8900,
          9000,
          9100,
          9200,
          9300,
          9400,
          9500,
          9600,
          9700,
          9800,
          9900,
          10000
         ],
         "y": [
          0,
          9,
          20,
          27,
          38,
          43,
          55,
          62,
          67,
          71,
          72,
          77,
          81,
          83,
          86,
          90,
          93,
          94,
          96,
          98,
          99,
          99,
          100,
          100,
          101,
          102,
          103,
          103,
          105,
          105,
          106,
          107,
          108,
          109,
          109,
          110,
          112,
          112,
          113,
          114,
          114,
          114,
          114,
          115,
          115,
          116,
          116,
          117,
          117,
          118,
          118,
          119,
          119,
          119,
          119,
          119,
          120,
          122,
          122,
          122,
          122,
          122,
          122,
          122,
          122,
          124,
          124,
          124,
          124,
          125,
          126,
          126,
          126,
          126,
          127,
          127,
          127,
          129,
          131,
          131,
          132,
          132,
          132,
          132,
          132,
          133,
          133,
          133,
          134,
          135,
          135,
          137,
          137,
          138,
          139,
          139,
          139,
          141,
          142,
          142,
          143
         ]
        }
       ],
       "_js2py_pointsCallback": {},
       "_js2py_relayout": {},
       "_js2py_restyle": {},
       "_js2py_update": {},
       "_last_layout_edit_id": 4,
       "_last_trace_edit_id": 1,
       "_layout": {
        "height": 240,
        "hovermode": "closest",
        "margin": {
         "b": 15,
         "l": 15,
         "r": 15,
         "t": 40
        },
        "showlegend": false,
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "title": {
         "text": "ε-Progress"
        },
        "width": 340
       },
       "_py2js_addTraces": {},
       "_py2js_animate": {},
       "_py2js_deleteTraces": {},
       "_py2js_moveTraces": {},
       "_py2js_removeLayoutProps": {},
       "_py2js_removeTraceProps": {},
       "_py2js_restyle": {},
       "_view_count": 1
      }
     },
     "f7ec51a435c14857bfdc4de5fb5d08ad": {
      "model_module": "@jupyter-widgets/output",
      "model_module_version": "1.0.0",
      "model_name": "OutputModel",
      "state": {
       "layout": "IPY_MODEL_7b3c6746e0c44bdba7a53f3cd9686886"
      }
     },
     "f937cecc02a04311b18d0ea51d34da1a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "CheckboxModel",
      "state": {
       "description": "(M-) Possibility of Negative Net Benefits",
       "description_tooltip": "Possibility of Negative Net Benefits",
       "disabled": false,
       "layout": "IPY_MODEL_db2d7c388f52427fa06d1be0aed87768",
       "name": "Possibility of Negative Net Benefits",
       "style": "IPY_MODEL_5809eecc88544218a0f5bdac91fafd4c",
       "value": true
      }
     },
     "fa0131ca90b94072bcbfedacf62b7560": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "VBoxModel",
      "state": {
       "children": [
        "IPY_MODEL_77f66753dc4c491895feec8f6cf14421",
        "IPY_MODEL_afea89d49630498ba5b6bcdaebb7d76f",
        "IPY_MODEL_c6bc35ee55134dfcb2fab889f006721c",
        "IPY_MODEL_435b146d4be14344a762614b0a41e920"
       ],
       "layout": "IPY_MODEL_b6747f0c6f25446bba6dc3638e04b258"
      }
     },
     "fa3f824a45ba4b04ad87660095ffad34": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "description_width": ""
      }
     },
     "fd486319b7a54ff492b8860a3a0dcc4e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "BoxModel",
      "state": {
       "children": [
        "IPY_MODEL_8c93617032ad46e19a4d5620fb03107e",
        "IPY_MODEL_612e426ce9c141fda527639b233e3e9a",
        "IPY_MODEL_8f582716bad54c0bb092ab339b83cb86",
        "IPY_MODEL_387183a91815439d96b8423fcde3a4e1",
        "IPY_MODEL_57e68c2a5456470791faf84b7ed233bc",
        "IPY_MODEL_a62f6028f8ba483a92fc2c2c8cd3b352",
        "IPY_MODEL_c8ccb59c17754d638dc1ceffa15d91e9",
        "IPY_MODEL_733690425f224fecaab544051bd5a130",
        "IPY_MODEL_bcd6632e225e4cec86444a471096f7f1",
        "IPY_MODEL_b6a50e6f8c6b419e9f7e45e814dec003",
        "IPY_MODEL_e2930abc51de414d926bb7051cb54411",
        "IPY_MODEL_707e8128acaf41748f74b243a1bc823a"
       ],
       "layout": "IPY_MODEL_6d05f79bc52f43ceaa4b810256208fb5"
      }
     },
     "fd8d272ebf0c435e96c23f4930f6c71a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     },
     "fdc3465ba3a343d8867c837dcbb05894": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "layout": "IPY_MODEL_4360d48ed2bc446b9917c55f64f9c4c9",
       "style": "IPY_MODEL_089a81f8106d4de086887e5482030419",
       "value": "\n\t\t\t(M-) Performance Measure to Minimize<br>\n\t\t\t(M+) Performance Measure to Maximize<br>\n\t\t\t(M) Performance Measure without preferred direction<br>\n\t\t\t(L) Policy Lever<br>\n\t\t\t(X) Exogenous Uncertainty\n\t\t"
      }
     },
     "fe6a8a763f924ebd9777d49c962b6f48": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {}
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
