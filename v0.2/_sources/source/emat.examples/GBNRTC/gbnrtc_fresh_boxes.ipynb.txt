{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import emat"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Load a scope from a yaml file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---\n",
      "# EMAT Scope Definition\n",
      "# \n",
      "\n",
      "scope:\n",
      "    name: GBNRTC\n",
      "    desc: EMAT Prototype using TransCAD\n",
      "\n",
      "inputs:\n",
      "\n",
      "    ## UNCERTAINTIES ##\n",
      "\n",
      "    Land Use - CBD Focus:\n",
      "        ptype: exogenous uncertainty\n",
      "        desc: Change in overall land use with greatest effect in CBD\n",
      "        default: 1.0\n",
      "        min: 0.82\n",
      "        max: 1.37\n",
      "        dist:\n",
      "            name: pert\n",
      "            rel_peak: 0.33\n",
      "            gamma: 4\n",
      "        corr: []\n",
      "\n",
      "    Freeway Capacity:\n",
      "        ptype: exogenous uncertainty\n",
      "        desc: Change in freeway capacity due to Vehicle Technology\n",
      "        default: 1.0\n",
      "        min: 1.0\n",
      "        max: 2.0\n",
      "        dist:\n",
      "            name: triangle\n",
      "            rel_peak: 0.5\n",
      "        corr: []\n",
      "        \n",
      "    Auto IVTT Sensitivity:\n",
      "        ptype: exogenous uncertainty\n",
      "        desc: Change in sensitivity to Auto travel time due to Vehicle Technology\n",
      "        default: 1.0\n",
      "        min: 0.75\n",
      "        max: 1.0\n",
      "        dist:\n",
      "            name: triangle\n",
      "            rel_peak: 0.5\n",
      "        corr: []\n",
      "        \n",
      "    Shared Mobility:\n",
      "        ptype: exogenous uncertainty\n",
      "        desc: Change in vehicle availability to represent ubiquity of shared mobility\n",
      "        default: 0\n",
      "        min: 0\n",
      "        max: 1.0\n",
      "        dist:\n",
      "            name: pert\n",
      "            rel_peak: 0.5\n",
      "            gamma: 4\n",
      "        corr: []\n",
      "    \n",
      "    ## LEVERS ##  \n",
      "        \n",
      "    Kensington Decommissioning:\n",
      "        ptype: policy lever\n",
      "        dtype: bool\n",
      "        desc: Change Kensington facility type from divided highway to arterial\n",
      "        default: 0\n",
      "        min: 0 \n",
      "        max: 1\n",
      "        dist: binary\n",
      "        corr: []\n",
      "        \n",
      "    LRT Extension:\n",
      "        ptype: policy lever\n",
      "        dtype: bool\n",
      "        desc: Amherst LRT extended to UB campus\n",
      "        default: 0\n",
      "        min: 0 \n",
      "        max: 1\n",
      "        dist: binary\n",
      "        corr: []\n",
      "\n",
      "\n",
      "# Performance Measures -------------------------------------------------------\n",
      "#\n",
      "\n",
      "outputs:\n",
      "\n",
      "    Region-wide VMT:\n",
      "        metamodeltype: log\n",
      "        kind: minimize\n",
      "    Interstate + Expressway + Ramp/Connector VMT:\n",
      "        metamodeltype: log\n",
      "        kind: minimize\n",
      "    Major and Minor Arterials VMT:\n",
      "        metamodeltype: log\n",
      "        kind: minimize\n",
      "    Total Auto VMT:\n",
      "        metamodeltype: log\n",
      "        kind: minimize\n",
      "    Total Truck VMT:\n",
      "        metamodeltype: log\n"
     ]
    }
   ],
   "source": [
    "with open('gbnrtc_scope.yaml') as yf:\n",
    "    for _ in range(100):\n",
    "        print(yf.readline(), end=\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "scope = emat.Scope('gbnrtc_scope.yaml')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<emat.Scope with 4 uncertainties, 2 levers, 46 measures>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scope"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Create a brand new set of `Boxes`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "boxes = emat.Boxes(scope=scope)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Define a new top-level box (i.e. a box with no parents to inherit from)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "box_1 = emat.Box(name='High Population Growth', scope=scope)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Add a lower bound for population growth, to ensure the include values are all \"high\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "box_1.set_lower_bound('Land Use - CBD Focus', 1.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Add some things as \"relevant features\" that we are interested in analyzing,\n",
    "even though we do not set bounds on them (yet)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "box_1.relevant_features.add('Total LRT Boardings')\n",
    "box_1.relevant_features.add('Downtown to Airport Travel Time')\n",
    "box_1.relevant_features.add('Peak Transit Share')\n",
    "box_1.relevant_features.add('AM Trip Time (minutes)')\n",
    "box_1.relevant_features.add('AM Trip Length (miles)')\n",
    "box_1.relevant_features.add('Region-wide VMT')\n",
    "box_1.relevant_features.add('Total Transit Boardings')\n",
    "box_1.relevant_features.add('Corridor Kensington Daily VMT')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Box: High Population Growth\n",
       "   ●             Land Use - CBD Focus >= 1.0\n",
       "   ◌                  Region-wide VMT\n",
       "   ◌          Total Transit Boardings\n",
       "   ◌  Downtown to Airport Travel Time\n",
       "   ◌               Peak Transit Share\n",
       "   ◌              Total LRT Boardings\n",
       "   ◌    Corridor Kensington Daily VMT\n",
       "   ◌           AM Trip Length (miles)\n",
       "   ◌           AM Trip Time (minutes)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Define a new lower level box, which will inherit from the top level box we just created."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "box_2 = emat.Box(name='Automated Vehicles', scope=scope, parent='High Population Growth')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Set some thresholds on this lower level box."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "box_2.set_lower_bound('Freeway Capacity', 1.25)\n",
    "box_2.set_upper_bound('Auto IVTT Sensitivity', 0.9)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Box: Automated Vehicles\n",
       "   ●       Freeway Capacity >= 1.25\n",
       "   ●  Auto IVTT Sensitivity <= 0.9"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'High Population Growth'"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "box_2.parent_box_name"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So far, the individual boxes we created are just loose boxes.  To connect them, we need to add them to the master `Boxes` object."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "boxes.add(box_1)\n",
    "boxes.add(box_2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can check on what named boxes are in a `Boxes` object with the `plain_names` method,\n",
    "which just gives the names, or the `fancy_names` method, which adds some icons\n",
    "to help indicate the hierarchy."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[None, 'High Population Growth', 'Automated Vehicles']"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boxes.plain_names()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Scope: GBNRTC', '▶ High Population Growth', '▷ ▶ Automated Vehicles']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boxes.fancy_names()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now that the boxes are linked together in a `Boxes` object, we can use the `get_chain` method to aggregate\n",
    "the attributes of any box along with all parents in the chain."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ChainedBox: Automated Vehicles\n",
       "   ●             Land Use - CBD Focus >= 1.0\n",
       "   ●                 Freeway Capacity >= 1.25\n",
       "   ●            Auto IVTT Sensitivity <= 0.9\n",
       "   ◌                  Region-wide VMT\n",
       "   ◌          Total Transit Boardings\n",
       "   ◌  Downtown to Airport Travel Time\n",
       "   ◌               Peak Transit Share\n",
       "   ◌              Total LRT Boardings\n",
       "   ◌    Corridor Kensington Daily VMT\n",
       "   ◌           AM Trip Length (miles)\n",
       "   ◌           AM Trip Time (minutes)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boxes.get_chain('Automated Vehicles')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:EMAT]",
   "language": "python",
   "name": "conda-env-EMAT-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
