{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Restarting core files models after a core model run error\n",
    "\n",
    "The simplest way to setup and run experiments, and then to import the results and archive the model is to use `run_experiments`. However, if the core files model fails during an experiment and it is preferable to not restart that particular experiment from scratch but to finish the run manually, the individual functions of the function may be called before running the remaining experiments.\n",
    "\n",
    "This example first shows the process to run a set of designed experiments through the core model, then shows the steps to run the individual functions of `run_experiments`. Finally, the command to run the remaining functions is shown using the pending_only argument of run_experiments.  \n",
    "\n",
    "This example assumes that an experiment design has been created, for examples on creating an \n",
    "experiment design, see the examples in the `design_experiments`\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0.1.4'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import emat\n",
    "emat.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas, numpy, os\n",
    "from emat.util.loggers import log_to_stderr\n",
    "log = log_to_stderr(level=20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# connect to database of experiments\n",
    "db = emat.SQLiteDB(\"emat_db/gbnrtc.db\",initialize=False)\n",
    "scope = db.read_scope('GBNRTC')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# load model object\n",
    "from emat.model import GBNRTCModel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<emat.model.core_files.gbnrtc_model.GBNRTCModel at 0x172228412b0>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "g = GBNRTCModel(\n",
    "    configuration='gbnrtc_model_config.yaml',\n",
    "    scope=scope,\n",
    "    db=db,\n",
    ")\n",
    "g"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run All Experiments\n",
    "\n",
    "If all goes well and the core model will be run on a single system, the following function is the only one necessary to run to execute the core model across the set of experiments and populate the database with the model outputs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Land Use - CBD Focus</th>\n",
       "      <th>Freeway Capacity</th>\n",
       "      <th>Auto IVTT Sensitivity</th>\n",
       "      <th>Shared Mobility</th>\n",
       "      <th>Kensington Decommissioning</th>\n",
       "      <th>LRT Extension</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>experiment</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.086300</td>\n",
       "      <td>1.587369</td>\n",
       "      <td>0.873289</td>\n",
       "      <td>0.425711</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.023312</td>\n",
       "      <td>1.158360</td>\n",
       "      <td>0.911751</td>\n",
       "      <td>0.252330</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.170003</td>\n",
       "      <td>1.301395</td>\n",
       "      <td>0.817217</td>\n",
       "      <td>0.509674</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.096142</td>\n",
       "      <td>1.634592</td>\n",
       "      <td>0.858481</td>\n",
       "      <td>0.154432</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.844650</td>\n",
       "      <td>1.348292</td>\n",
       "      <td>0.808333</td>\n",
       "      <td>0.288354</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            Land Use - CBD Focus  Freeway Capacity  Auto IVTT Sensitivity  \\\n",
       "experiment                                                                  \n",
       "1                       1.086300          1.587369               0.873289   \n",
       "2                       1.023312          1.158360               0.911751   \n",
       "3                       1.170003          1.301395               0.817217   \n",
       "4                       1.096142          1.634592               0.858481   \n",
       "5                       0.844650          1.348292               0.808333   \n",
       "\n",
       "            Shared Mobility  Kensington Decommissioning  LRT Extension  \n",
       "experiment                                                              \n",
       "1                  0.425711                        True           True  \n",
       "2                  0.252330                       False           True  \n",
       "3                  0.509674                       False           True  \n",
       "4                  0.154432                        True           True  \n",
       "5                  0.288354                        True           True  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "exp_df = g.read_experiments(design_name='lhs')\n",
    "exp_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "g.run_experiments()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Restart single experiment after manual completion of run\n",
    "\n",
    "Now let's assume that during the first experiment (ID 1) the model crashed on the last speed-feedback iteration. Rather than restart the model run at the beginning (as run_experiments would do) the user may complete the model run manually and then post process and import the model outputs using TMIP-EMAT\n",
    "\n",
    "If the user prefers to simply restart the core model from the beginning, skip this step and proceed to the following section on Running Pending Experiments.\n",
    "\n",
    "The first step is to identify the experiment that failed. This should be displayed in the error message from the command above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Land Use - CBD Focus            1.0863\n",
       "Freeway Capacity               1.58737\n",
       "Auto IVTT Sensitivity         0.873289\n",
       "Shared Mobility               0.425711\n",
       "Kensington Decommissioning        True\n",
       "LRT Extension                     True\n",
       "Name: 1, dtype: object"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# let's assume that the model failed on the 1st experiment, \n",
    "# note this matches the experiment column in the data frame above\n",
    "exp_id = 1\n",
    "\n",
    "# get the measure names from the scope for reference\n",
    "measure_names = g.scope.get_measure_names()\n",
    "\n",
    "# get a dictionary of the parameters for reference\n",
    "params = exp_df.loc[exp_id]\n",
    "params"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[02:18.44] MainProcess/INFO: Running post process scripts at 2019_08_07 141145\n",
      "[02:18.45] MainProcess/WARNING: [(re)starting TransCAD instances]\n"
     ]
    }
   ],
   "source": [
    "# First, call the post processor to generate the output metrics in a format \n",
    "# that tmip-emat can read\n",
    "\n",
    "g.post_process(params, measure_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Next, import the metrics and write them to the database\n",
    "measures_dictionary = g.load_measures(measure_names)\n",
    "m_df = pandas.DataFrame(measures_dictionary, index=[exp_id])\n",
    "\n",
    "# Assign to outcomes_output, for ema_workbench compatibility\n",
    "g.outcomes_output = measures_dictionary\n",
    "g.db.write_experiment_measures(g.scope.name, g.metamodel_id, m_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Land Use - CBD Focus</th>\n",
       "      <th>Freeway Capacity</th>\n",
       "      <th>Auto IVTT Sensitivity</th>\n",
       "      <th>Shared Mobility</th>\n",
       "      <th>Kensington Decommissioning</th>\n",
       "      <th>LRT Extension</th>\n",
       "      <th>Region-wide VMT</th>\n",
       "      <th>Interstate + Expressway + Ramp/Connector VMT</th>\n",
       "      <th>Major and Minor Arterials VMT</th>\n",
       "      <th>Total Auto VMT</th>\n",
       "      <th>...</th>\n",
       "      <th>OD Volume District 1 to 7</th>\n",
       "      <th>OD Volume District 1 to 8</th>\n",
       "      <th>OD Volume District 1 to 9</th>\n",
       "      <th>OD Volume District 1 to 10</th>\n",
       "      <th>Peak Transit Share</th>\n",
       "      <th>Peak NonMotorized Share</th>\n",
       "      <th>Off-Peak Transit Share</th>\n",
       "      <th>Off-Peak NonMotorized Share</th>\n",
       "      <th>Daily Transit Share</th>\n",
       "      <th>Daily NonMotorized Share</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>experiment</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.086300</td>\n",
       "      <td>1.587369</td>\n",
       "      <td>0.873289</td>\n",
       "      <td>0.425711</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>2.577793e+07</td>\n",
       "      <td>1.064360e+07</td>\n",
       "      <td>1.073000e+07</td>\n",
       "      <td>2.305935e+07</td>\n",
       "      <td>...</td>\n",
       "      <td>22135.892578</td>\n",
       "      <td>1957.864014</td>\n",
       "      <td>10585.642578</td>\n",
       "      <td>4567.508301</td>\n",
       "      <td>0.021358</td>\n",
       "      <td>0.072049</td>\n",
       "      <td>0.017564</td>\n",
       "      <td>0.06862</td>\n",
       "      <td>0.019305</td>\n",
       "      <td>0.070193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.023312</td>\n",
       "      <td>1.158360</td>\n",
       "      <td>0.911751</td>\n",
       "      <td>0.252330</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.170003</td>\n",
       "      <td>1.301395</td>\n",
       "      <td>0.817217</td>\n",
       "      <td>0.509674</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.096142</td>\n",
       "      <td>1.634592</td>\n",
       "      <td>0.858481</td>\n",
       "      <td>0.154432</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.844650</td>\n",
       "      <td>1.348292</td>\n",
       "      <td>0.808333</td>\n",
       "      <td>0.288354</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 52 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Land Use - CBD Focus  Freeway Capacity  Auto IVTT Sensitivity  \\\n",
       "experiment                                                                  \n",
       "1                       1.086300          1.587369               0.873289   \n",
       "2                       1.023312          1.158360               0.911751   \n",
       "3                       1.170003          1.301395               0.817217   \n",
       "4                       1.096142          1.634592               0.858481   \n",
       "5                       0.844650          1.348292               0.808333   \n",
       "\n",
       "            Shared Mobility  Kensington Decommissioning  LRT Extension  \\\n",
       "experiment                                                               \n",
       "1                  0.425711                        True           True   \n",
       "2                  0.252330                       False           True   \n",
       "3                  0.509674                       False           True   \n",
       "4                  0.154432                        True           True   \n",
       "5                  0.288354                        True           True   \n",
       "\n",
       "            Region-wide VMT  Interstate + Expressway + Ramp/Connector VMT  \\\n",
       "experiment                                                                  \n",
       "1              2.577793e+07                                  1.064360e+07   \n",
       "2                       NaN                                           NaN   \n",
       "3                       NaN                                           NaN   \n",
       "4                       NaN                                           NaN   \n",
       "5                       NaN                                           NaN   \n",
       "\n",
       "            Major and Minor Arterials VMT  Total Auto VMT  ...  \\\n",
       "experiment                                                 ...   \n",
       "1                            1.073000e+07    2.305935e+07  ...   \n",
       "2                                     NaN             NaN  ...   \n",
       "3                                     NaN             NaN  ...   \n",
       "4                                     NaN             NaN  ...   \n",
       "5                                     NaN             NaN  ...   \n",
       "\n",
       "            OD Volume District 1 to 7  OD Volume District 1 to 8  \\\n",
       "experiment                                                         \n",
       "1                        22135.892578                1957.864014   \n",
       "2                                 NaN                        NaN   \n",
       "3                                 NaN                        NaN   \n",
       "4                                 NaN                        NaN   \n",
       "5                                 NaN                        NaN   \n",
       "\n",
       "            OD Volume District 1 to 9  OD Volume District 1 to 10  \\\n",
       "experiment                                                          \n",
       "1                        10585.642578                 4567.508301   \n",
       "2                                 NaN                         NaN   \n",
       "3                                 NaN                         NaN   \n",
       "4                                 NaN                         NaN   \n",
       "5                                 NaN                         NaN   \n",
       "\n",
       "            Peak Transit Share  Peak NonMotorized Share  \\\n",
       "experiment                                                \n",
       "1                     0.021358                 0.072049   \n",
       "2                          NaN                      NaN   \n",
       "3                          NaN                      NaN   \n",
       "4                          NaN                      NaN   \n",
       "5                          NaN                      NaN   \n",
       "\n",
       "            Off-Peak Transit Share  Off-Peak NonMotorized Share  \\\n",
       "experiment                                                        \n",
       "1                         0.017564                      0.06862   \n",
       "2                              NaN                          NaN   \n",
       "3                              NaN                          NaN   \n",
       "4                              NaN                          NaN   \n",
       "5                              NaN                          NaN   \n",
       "\n",
       "            Daily Transit Share  Daily NonMotorized Share  \n",
       "experiment                                                 \n",
       "1                      0.019305                  0.070193  \n",
       "2                           NaN                       NaN  \n",
       "3                           NaN                       NaN  \n",
       "4                           NaN                       NaN  \n",
       "5                           NaN                       NaN  \n",
       "\n",
       "[5 rows x 52 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# confirm that the metrics were imported into the database\n",
    "g.read_experiments(design_name='lhs').head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# finally, archive the model\n",
    "archive_path = g.get_experiment_archive_path(exp_id)\n",
    "g.archive(params, archive_path, exp_id)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Running Pending Experiments\n",
    "\n",
    "Now that the partial run has been wrapped up, imported, and archived, we can resume running the remaining experiments, with fingers crossed!\n",
    "\n",
    "To identify the experiments that haven't been run, we can identify the pending experiments and pass those to the run_experiments method."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Land Use - CBD Focus</th>\n",
       "      <th>Freeway Capacity</th>\n",
       "      <th>Auto IVTT Sensitivity</th>\n",
       "      <th>Shared Mobility</th>\n",
       "      <th>Kensington Decommissioning</th>\n",
       "      <th>LRT Extension</th>\n",
       "      <th>Region-wide VMT</th>\n",
       "      <th>Interstate + Expressway + Ramp/Connector VMT</th>\n",
       "      <th>Major and Minor Arterials VMT</th>\n",
       "      <th>Total Auto VMT</th>\n",
       "      <th>...</th>\n",
       "      <th>OD Volume District 1 to 7</th>\n",
       "      <th>OD Volume District 1 to 8</th>\n",
       "      <th>OD Volume District 1 to 9</th>\n",
       "      <th>OD Volume District 1 to 10</th>\n",
       "      <th>Peak Transit Share</th>\n",
       "      <th>Peak NonMotorized Share</th>\n",
       "      <th>Off-Peak Transit Share</th>\n",
       "      <th>Off-Peak NonMotorized Share</th>\n",
       "      <th>Daily Transit Share</th>\n",
       "      <th>Daily NonMotorized Share</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>experiment</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.023312</td>\n",
       "      <td>1.158360</td>\n",
       "      <td>0.911751</td>\n",
       "      <td>0.252330</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.170003</td>\n",
       "      <td>1.301395</td>\n",
       "      <td>0.817217</td>\n",
       "      <td>0.509674</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.096142</td>\n",
       "      <td>1.634592</td>\n",
       "      <td>0.858481</td>\n",
       "      <td>0.154432</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.844650</td>\n",
       "      <td>1.348292</td>\n",
       "      <td>0.808333</td>\n",
       "      <td>0.288354</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.883839</td>\n",
       "      <td>1.492314</td>\n",
       "      <td>0.944300</td>\n",
       "      <td>0.651629</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 52 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Land Use - CBD Focus  Freeway Capacity  Auto IVTT Sensitivity  \\\n",
       "experiment                                                                  \n",
       "2                       1.023312          1.158360               0.911751   \n",
       "3                       1.170003          1.301395               0.817217   \n",
       "4                       1.096142          1.634592               0.858481   \n",
       "5                       0.844650          1.348292               0.808333   \n",
       "6                       0.883839          1.492314               0.944300   \n",
       "\n",
       "            Shared Mobility  Kensington Decommissioning  LRT Extension  \\\n",
       "experiment                                                               \n",
       "2                  0.252330                       False           True   \n",
       "3                  0.509674                       False           True   \n",
       "4                  0.154432                        True           True   \n",
       "5                  0.288354                        True           True   \n",
       "6                  0.651629                        True          False   \n",
       "\n",
       "            Region-wide VMT  Interstate + Expressway + Ramp/Connector VMT  \\\n",
       "experiment                                                                  \n",
       "2                       NaN                                           NaN   \n",
       "3                       NaN                                           NaN   \n",
       "4                       NaN                                           NaN   \n",
       "5                       NaN                                           NaN   \n",
       "6                       NaN                                           NaN   \n",
       "\n",
       "            Major and Minor Arterials VMT  Total Auto VMT  ...  \\\n",
       "experiment                                                 ...   \n",
       "2                                     NaN             NaN  ...   \n",
       "3                                     NaN             NaN  ...   \n",
       "4                                     NaN             NaN  ...   \n",
       "5                                     NaN             NaN  ...   \n",
       "6                                     NaN             NaN  ...   \n",
       "\n",
       "            OD Volume District 1 to 7  OD Volume District 1 to 8  \\\n",
       "experiment                                                         \n",
       "2                                 NaN                        NaN   \n",
       "3                                 NaN                        NaN   \n",
       "4                                 NaN                        NaN   \n",
       "5                                 NaN                        NaN   \n",
       "6                                 NaN                        NaN   \n",
       "\n",
       "            OD Volume District 1 to 9  OD Volume District 1 to 10  \\\n",
       "experiment                                                          \n",
       "2                                 NaN                         NaN   \n",
       "3                                 NaN                         NaN   \n",
       "4                                 NaN                         NaN   \n",
       "5                                 NaN                         NaN   \n",
       "6                                 NaN                         NaN   \n",
       "\n",
       "            Peak Transit Share  Peak NonMotorized Share  \\\n",
       "experiment                                                \n",
       "2                          NaN                      NaN   \n",
       "3                          NaN                      NaN   \n",
       "4                          NaN                      NaN   \n",
       "5                          NaN                      NaN   \n",
       "6                          NaN                      NaN   \n",
       "\n",
       "            Off-Peak Transit Share  Off-Peak NonMotorized Share  \\\n",
       "experiment                                                        \n",
       "2                              NaN                          NaN   \n",
       "3                              NaN                          NaN   \n",
       "4                              NaN                          NaN   \n",
       "5                              NaN                          NaN   \n",
       "6                              NaN                          NaN   \n",
       "\n",
       "            Daily Transit Share  Daily NonMotorized Share  \n",
       "experiment                                                 \n",
       "2                           NaN                       NaN  \n",
       "3                           NaN                       NaN  \n",
       "4                           NaN                       NaN  \n",
       "5                           NaN                       NaN  \n",
       "6                           NaN                       NaN  \n",
       "\n",
       "[5 rows x 52 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reading in the pending experiments, note that experiment 1 is not included\n",
    "pending_exp = g.read_experiments(design_name='lhs',only_pending=True)\n",
    "pending_exp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "g.run_experiments(design=pending_exp)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
